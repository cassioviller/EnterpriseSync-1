# üîç PROMPT FOCADO: AN√ÅLISE DE ARQUIVOS - DESENVOLVIMENTO vs PRODU√á√ÉO

## üéØ OBJETIVO ESPEC√çFICO
Comparar e identificar diferen√ßas cr√≠ticas entre os arquivos do desenvolvimento (Replit) e produ√ß√£o (GitHub/EasyPanel) que est√£o causando o descompasso funcional no SIGE v10.0.

## üìÅ ARQUIVOS CR√çTICOS PARA AN√ÅLISE

### 1. ARQUIVOS DE CONFIGURA√á√ÉO PRINCIPAL

#### 1.1 `app.py` - Aplica√ß√£o Principal
**Analisar:**
- Vers√£o do sistema (v10.0 Digital Mastery)
- Blueprints registrados (18 m√≥dulos)
- Configura√ß√µes de observabilidade
- Vari√°veis de ambiente
- Configura√ß√£o multi-tenant (admin_id)

**Comparar especificamente:**
```python
# Desenvolvimento vs Produ√ß√£o
app.config['DIGITAL_MASTERY_MODE'] = True
app.config['OBSERVABILITY_ENABLED'] = True
# Blueprints registrados
app.register_blueprint(rdo_bp)
app.register_blueprint(propostas_bp)
# etc...
```

#### 1.2 `models.py` - Estrutura do Banco
**Analisar:**
- 93 tabelas consolidadas
- Campos admin_id em todas as tabelas cr√≠ticas
- Relacionamentos entre tabelas
- Novos campos adicionados na v10.0

**Focar em:**
```python
class RDO(db.Model):
    # Campos espec√≠ficos da v10.0
    admin_id = db.Column(db.Integer, nullable=False)
    # Novos campos para Digital Mastery
```

### 2. SISTEMA RDO (CR√çTICO)

#### 2.1 Blueprint RDO
**Arquivos a comparar:**
- `blueprints/rdo.py` ou arquivo equivalente
- Rotas de RDO (/rdo/*, /api/rdo/*)
- L√≥gica de descoberta autom√°tica de servi√ßos
- Processamento das 16 subatividades

**Analisar especificamente:**
```python
# Descoberta autom√°tica de servi√ßos
def descobrir_servico_automatico():
    # COBERTURA MET√ÅLICA - ID: 139
    
# Processamento de subatividades
def processar_subatividades():
    # 16 subatividades com nomes reais
```

#### 2.2 Templates RDO
**Arquivos a comparar:**
- `templates/rdo/` - Todos os templates
- `templates/base_completo.html` - Template base modernizado
- CSS/JS espec√≠ficos do RDO
- Interface Digital Mastery vs interface antiga

**Verificar:**
- Design responsivo implementado
- Cards elegantes vs listas simples
- Gradientes e anima√ß√µes suaves
- Formul√°rios de subatividades

### 3. ARQUIVOS DE DEPLOY

#### 3.1 `Dockerfile`
**Comparar linha por linha:**
```dockerfile
# Desenvolvimento vs Produ√ß√£o
FROM python:3.11-slim-bookworm
LABEL version="10.0" architecture="Digital Mastery"
ENV FLASK_ENV=production
ENV DIGITAL_MASTERY_MODE=true
ENV OBSERVABILITY_ENABLED=true
ENV GUNICORN_WORKERS=4
HEALTHCHECK --interval=30s --timeout=15s CMD curl -f http://localhost:5000/health
ENTRYPOINT ["/app/docker-entrypoint-digital-mastery.sh"]
```

#### 3.2 `docker-entrypoint-digital-mastery.sh`
**Verificar:**
- Permiss√µes de execu√ß√£o (chmod +x)
- Comandos de inicializa√ß√£o
- Configura√ß√µes de produ√ß√£o
- Migra√ß√µes (devem estar desabilitadas)

#### 3.3 `pyproject.toml`
**Comparar depend√™ncias:**
```toml
[tool.poetry.dependencies]
python = "^3.11"
flask = "3.1.1"
sqlalchemy = "2.0.41"
# Todas as 36 depend√™ncias
```

### 4. BLUEPRINTS E M√ìDULOS

#### 4.1 Blueprints Registrados (18 m√≥dulos)
**Verificar se todos est√£o presentes:**
- folha_pagamento
- contabilidade  
- templates
- alimenta√ß√£o
- propostas
- api_organizer
- categorias_servicos
- configura√ß√µes
- api_servicos_obra_limpa
- rdo (cr√≠tico)
- funcionarios
- almoxarifado
- relatorios
- etc.

#### 4.2 Utilit√°rios de Resili√™ncia
**Arquivos a comparar:**
- `utils/idempotency.py`
- `utils/circuit_breaker.py`
- `utils/saga.py`
- Implementa√ß√£o dos padr√µes Joris Kuypers

### 5. TEMPLATES E FRONTEND

#### 5.1 Template Base
**Arquivo cr√≠tico:** `templates/base_completo.html`
**Verificar:**
- Bootstrap atualizado
- Meta tags PWA
- CSS personalizado
- JavaScript moderno
- Responsividade mobile

#### 5.2 Templates Espec√≠ficos
**Comparar:**
- `templates/dashboard/` - Dashboard modernizado
- `templates/funcionarios/` - Interface de RH
- `templates/propostas/` - Sistema comercial
- `templates/rdo/` - Interface RDO (CR√çTICO)

### 6. ARQUIVOS DE CONFIGURA√á√ÉO

#### 6.1 Configura√ß√µes de Produ√ß√£o
**Verificar:**
- Configura√ß√µes de banco PostgreSQL
- Vari√°veis de ambiente
- Configura√ß√µes de seguran√ßa
- SSL e CORS

#### 6.2 Health Checks e Observabilidade
**Arquivos:**
- Rotas `/health`
- `/debug/mastery-dashboard`
- Logs estruturados
- M√©tricas de monitoramento

## üîç METODOLOGIA DE COMPARA√á√ÉO

### Para cada arquivo identificado:

1. **DESENVOLVIMENTO (Replit):**
   - Extrair conte√∫do atual
   - Identificar vers√£o/timestamp
   - Listar funcionalidades implementadas

2. **PRODU√á√ÉO (GitHub):**
   - Verificar conte√∫do no reposit√≥rio
   - Comparar com desenvolvimento
   - Identificar diferen√ßas cr√≠ticas

3. **AN√ÅLISE DE IMPACTO:**
   - Quais diferen√ßas causam o problema RDO?
   - Quais afetam a interface?
   - Quais impedem funcionalidades?

## üìã FORMATO DE RESPOSTA ESPERADO

Para cada arquivo analisado:

```
üìÅ ARQUIVO: nome_do_arquivo.py
üîç STATUS: [SINCRONIZADO/DESSINCRONIZADO/AUSENTE]
‚ö†Ô∏è DIFEREN√áAS CR√çTICAS:
   - Linha X: fun√ß√£o Y ausente em produ√ß√£o
   - Linha Z: configura√ß√£o W diferente
üéØ IMPACTO: Como afeta o funcionamento
üîß CORRE√á√ÉO: O que precisa ser atualizado
```

## üö® PRIORIDADE DE AN√ÅLISE

1. **CR√çTICO:** Arquivos RDO (blueprint, templates, l√≥gica)
2. **ALTO:** app.py, models.py, Dockerfile
3. **M√âDIO:** Templates base, utilit√°rios
4. **BAIXO:** Documenta√ß√£o, arquivos auxiliares

## üéØ RESULTADO FINAL ESPERADO

**Lista completa de arquivos que precisam ser sincronizados entre desenvolvimento e produ√ß√£o, com:**
- Identifica√ß√£o exata das diferen√ßas
- Impacto de cada diferen√ßa no funcionamento
- Ordem de prioridade para corre√ß√£o
- Arquivos que podem ser copiados diretamente
- Arquivos que precisam de merge cuidadoso

**FOCO:** Resolver especificamente por que o RDO n√£o funciona em produ√ß√£o e por que a interface est√° antiga, atrav√©s da an√°lise precisa dos arquivos.

