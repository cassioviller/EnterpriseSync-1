# Prompt para Replit Agent - Corre√ß√£o Dashboard SIGE

## üéØ OBJETIVO

Corrigir erro `UnboundLocalError` que ocorre APENAS em produ√ß√£o (Docker/Easypanel) e adicionar card de margem de lucro no dashboard.

## üêõ PROBLEMA IDENTIFICADO

**Erro em Produ√ß√£o:**
```
UnboundLocalError: cannot access local variable 'datetime' where it is not associated with a value
File "/app/views.py", line 418, in dashboard
    data_inicio = datetime.strptime(data_inicio_param, '%Y-%m-%d').date()
```

**Causa:** Existe uma reimporta√ß√£o local de `datetime` dentro da fun√ß√£o `dashboard()` na linha 939 que causa conflito de escopo quando o c√≥digo √© compilado pelo Gunicorn em produ√ß√£o.

## üìã MODIFICA√á√ïES NECESS√ÅRIAS

### MODIFICA√á√ÉO 1: Remover Reimporta√ß√£o de datetime (CR√çTICO)

**Arquivo:** `views.py`

**Localiza√ß√£o:** Dentro da fun√ß√£o `dashboard()`, procure pelo coment√°rio "1. EFICI√äNCIA GERAL" (aproximadamente linha 935-950)

**C√≥digo Atual (PROBLEM√ÅTICO):**
```python
# 1. EFICI√äNCIA GERAL - Calcular baseado em horas trabalhadas vs esperadas
eficiencia_geral = 0
try:
    # Horas esperadas = funcion√°rios ativos * dias √∫teis * 8h
    from datetime import datetime  # ‚ùå ESTA LINHA CAUSA O ERRO
    dias_uteis_mes = 22  # M√©dia de dias √∫teis
    horas_esperadas = funcionarios_ativos * dias_uteis_mes * 8
    
    if horas_esperadas > 0 and total_horas_real > 0:
        eficiencia_geral = round((total_horas_real / horas_esperadas) * 100, 1)
        # Limitar entre 0 e 100%
        eficiencia_geral = max(0, min(100, eficiencia_geral))
    print(f"DEBUG EFICI√äNCIA: {total_horas_real}h trabalhadas / {horas_esperadas}h esperadas = {eficiencia_geral}%")
except Exception as e:
    print(f"Erro ao calcular efici√™ncia: {e}")
    eficiencia_geral = 0
```

**C√≥digo Corrigido:**
```python
# 1. EFICI√äNCIA GERAL - Calcular baseado em horas trabalhadas vs esperadas
eficiencia_geral = 0
try:
    # Horas esperadas = funcion√°rios ativos * dias √∫teis * 8h
    # datetime j√° importado no topo do arquivo (linha 9) - n√£o precisa reimportar
    dias_uteis_mes = 22  # M√©dia de dias √∫teis
    horas_esperadas = funcionarios_ativos * dias_uteis_mes * 8
    
    if horas_esperadas > 0 and total_horas_real > 0:
        eficiencia_geral = round((total_horas_real / horas_esperadas) * 100, 1)
        # Limitar entre 0 e 100%
        eficiencia_geral = max(0, min(100, eficiencia_geral))
    print(f"DEBUG EFICI√äNCIA: {total_horas_real}h trabalhadas / {horas_esperadas}h esperadas = {eficiencia_geral}%")
except Exception as e:
    print(f"Erro ao calcular efici√™ncia: {e}")
    eficiencia_geral = 0
```

**A√ß√£o:** DELETAR a linha `from datetime import datetime` e adicionar coment√°rio explicativo.

---

### MODIFICA√á√ÉO 2: Adicionar C√°lculo de Margem de Lucro

**Arquivo:** `views.py`

**Localiza√ß√£o:** Dentro da fun√ß√£o `dashboard()`, AP√ìS o c√°lculo de `custos_detalhados` (aproximadamente linha 912-930)

**C√≥digo a Adicionar:**

```python
        # ========== C√ÅLCULO DE MARGEM DE LUCRO ==========
        # Adicionar ap√≥s custos_detalhados (linha ~912)
        margem_percentual = 0
        valor_contrato_total = 0
        
        try:
            # Buscar valor total de contratos das obras ativas
            valor_contrato_total = db.session.query(
                func.sum(Obra.valor_contrato)
            ).filter(
                Obra.admin_id == admin_id,
                Obra.status.in_(['ATIVO', 'andamento', 'Em andamento', 'ativa', 'planejamento'])
            ).scalar() or 0
            
            # Calcular margem percentual
            # Margem = ((Valor Contrato - Custos Totais) / Valor Contrato) * 100
            if valor_contrato_total > 0:
                margem_percentual = round(
                    ((valor_contrato_total - custos_mes) / valor_contrato_total) * 100, 
                    1
                )
            else:
                margem_percentual = 0
                
            print(f"DEBUG MARGEM: Contrato Total=R$ {valor_contrato_total:.2f}, Custos=R$ {custos_mes:.2f}, Margem={margem_percentual}%")
                
        except Exception as e:
            print(f"‚ùå Erro ao calcular margem: {e}")
            valor_contrato_total = 0
            margem_percentual = 0
        # ================================================
```

**Posi√ß√£o Exata:** Inserir AP√ìS o bloco `custos_detalhados = {...}` e ANTES do bloco `except Exception as e:` que trata erros gerais do dashboard.

---

### MODIFICA√á√ÉO 3: Adicionar Vari√°veis ao render_template

**Arquivo:** `views.py`

**Localiza√ß√£o:** Final da fun√ß√£o `dashboard()`, no `return render_template` (aproximadamente linha 1000-1035)

**C√≥digo Atual:**
```python
return render_template('dashboard.html',
                     total_funcionarios=total_funcionarios,
                     total_obras=total_obras,
                     total_veiculos=total_veiculos,
                     funcionarios_recentes=funcionarios_recentes,
                     obras_ativas=obras_ativas,
                     custos_mes=custos_mes,
                     custos_detalhados=custos_detalhados,
                     eficiencia_geral=eficiencia_geral,
                     produtividade_obra=produtividade_obra,
                     funcionarios_ativos=funcionarios_ativos,
                     obras_ativas_count=obras_ativas_count,
                     veiculos_disponiveis=veiculos_disponiveis,
                     funcionarios_por_departamento=funcionarios_por_departamento,
                     custos_por_obra=custos_por_obra,
                     funcionarios_dept=funcionarios_dept,
                     custos_recentes=custos_recentes,
                     obras_andamento=obras_andamento,
                     data_inicio=data_inicio,
                     data_fim=data_fim,
                     # M√©tricas de Propostas
                     propostas_aprovadas=propostas_aprovadas,
                     propostas_enviadas=propostas_enviadas,
                     propostas_rascunho=propostas_rascunho,
                     propostas_rejeitadas=propostas_rejeitadas,
                     propostas_expiradas=propostas_expiradas,
                     taxa_conversao=taxa_conversao,
                     valor_medio=valor_medio,
                     tempo_resposta_medio=tempo_resposta_medio,
                     propostas_por_mes=propostas_por_mes,
                     templates_populares=templates_populares,
                     outros_templates=outros_templates,
                     acessos_unicos=acessos_unicos,
                     tempo_medio_portal=tempo_medio_portal,
                     feedbacks_positivos=feedbacks_positivos,
                     downloads_pdf=downloads_pdf)
```

**C√≥digo Corrigido (adicionar 2 linhas):**
```python
return render_template('dashboard.html',
                     total_funcionarios=total_funcionarios,
                     total_obras=total_obras,
                     total_veiculos=total_veiculos,
                     funcionarios_recentes=funcionarios_recentes,
                     obras_ativas=obras_ativas,
                     custos_mes=custos_mes,
                     custos_detalhados=custos_detalhados,
                     eficiencia_geral=eficiencia_geral,
                     produtividade_obra=produtividade_obra,
                     funcionarios_ativos=funcionarios_ativos,
                     obras_ativas_count=obras_ativas_count,
                     veiculos_disponiveis=veiculos_disponiveis,
                     funcionarios_por_departamento=funcionarios_por_departamento,
                     custos_por_obra=custos_por_obra,
                     funcionarios_dept=funcionarios_dept,
                     custos_recentes=custos_recentes,
                     obras_andamento=obras_andamento,
                     data_inicio=data_inicio,
                     data_fim=data_fim,
                     # M√©tricas de Propostas
                     propostas_aprovadas=propostas_aprovadas,
                     propostas_enviadas=propostas_enviadas,
                     propostas_rascunho=propostas_rascunho,
                     propostas_rejeitadas=propostas_rejeitadas,
                     propostas_expiradas=propostas_expiradas,
                     taxa_conversao=taxa_conversao,
                     valor_medio=valor_medio,
                     tempo_resposta_medio=tempo_resposta_medio,
                     propostas_por_mes=propostas_por_mes,
                     templates_populares=templates_populares,
                     outros_templates=outros_templates,
                     acessos_unicos=acessos_unicos,
                     tempo_medio_portal=tempo_medio_portal,
                     feedbacks_positivos=feedbacks_positivos,
                     downloads_pdf=downloads_pdf,
                     # Margem de Lucro (NOVO)
                     margem_percentual=margem_percentual,
                     valor_contrato_total=valor_contrato_total)
```

**A√ß√£o:** Adicionar as duas √∫ltimas linhas antes do par√™ntese de fechamento.

---

### MODIFICA√á√ÉO 4: Adicionar Card de Margem no Template

**Arquivo:** `templates/dashboard.html`

**Localiza√ß√£o:** Dentro da se√ß√£o "Financeiro e Custos", ap√≥s os cards existentes (Alimenta√ß√£o, Transporte, M√£o de Obra, Faltas Justificadas, Outros, Total)

**C√≥digo HTML a Adicionar:**

```html
<!-- Card de Margem de Lucro - Adicionar ap√≥s o card "Total" -->
<div class="col-md-2">
    <div class="card text-center h-100 shadow-sm">
        <div class="card-body">
            <i class="fas fa-percentage fa-2x mb-3" 
               style="color: {% if margem_percentual >= 20 %}#28a745{% elif margem_percentual >= 10 %}#ffc107{% else %}#dc3545{% endif %}">
            </i>
            <h6 class="card-title text-muted">Margem</h6>
            <h4 class="card-text mb-0">
                <span class="{% if margem_percentual >= 20 %}text-success{% elif margem_percentual >= 10 %}text-warning{% else %}text-danger{% endif %}">
                    {{ margem_percentual }}%
                </span>
            </h4>
            <small class="text-muted d-block mt-2">
                Contrato: R$ {{ "{:,.2f}".format(valor_contrato_total) }}
            </small>
        </div>
    </div>
</div>
```

**Posi√ß√£o Exata:** Procure no template pela se√ß√£o com t√≠tulo "Financeiro e Custos" ou "üí∞ Custos Detalhados do Per√≠odo". Adicione o card acima AP√ìS o √∫ltimo card existente (provavelmente "Total").

**Cores do Card:**
- Verde (‚â•20%): Margem saud√°vel
- Amarelo (‚â•10%): Margem aceit√°vel
- Vermelho (<10%): Margem cr√≠tica

---

## üîç VALIDA√á√ÉO

Ap√≥s implementar as modifica√ß√µes, valide:

### ‚úÖ Em Desenvolvimento (Replit):
1. Dashboard carrega sem erros
2. N√£o h√° regress√µes em funcionalidades existentes
3. Card de margem aparece na se√ß√£o "Financeiro e Custos"

### ‚úÖ Em Produ√ß√£o (Docker/Easypanel) - CR√çTICO:
1. Build do Docker completa sem erros
2. Container inicia sem falhas
3. Dashboard carrega sem `UnboundLocalError`
4. KPIs mostram valores reais (n√£o zero):
   - Funcion√°rios Ativos > 0
   - Obras Ativas > 0
   - Custos do Per√≠odo > R$ 0.00
5. Card de "Margem" aparece e calcula corretamente
6. Cor do card muda conforme o valor da margem

---

## üìä RESUMO DAS ALTERA√á√ïES

| Arquivo | Modifica√ß√£o | Linhas Afetadas | Prioridade |
|---------|-------------|-----------------|------------|
| `views.py` | Remover `from datetime import datetime` | ~939 | üî¥ CR√çTICA |
| `views.py` | Adicionar c√°lculo de margem | ~912-930 | üü° ALTA |
| `views.py` | Adicionar vari√°veis ao render_template | ~1000-1035 | üü° ALTA |
| `templates/dashboard.html` | Adicionar card de margem | Se√ß√£o Financeiro | üü¢ M√âDIA |

---

## üéØ CONTEXTO T√âCNICO

**Por que o erro s√≥ ocorre em produ√ß√£o:**
- Gunicorn (produ√ß√£o) compila o c√≥digo uma vez na inicializa√ß√£o
- Python faz an√°lise est√°tica completa de escopo
- A reimporta√ß√£o de `datetime` na linha 939 marca a vari√°vel como LOCAL
- Linha 418 tenta usar `datetime` ANTES de ser "definido" (linha 939)
- Resultado: `UnboundLocalError`

**Por que funciona no Replit:**
- Hot reload din√¢mico
- Modo debug mais permissivo
- C√≥digo pode ser recarregado incrementalmente

**Solu√ß√£o:**
- Remover a reimporta√ß√£o local
- `datetime` j√° est√° importado globalmente na linha 9 do arquivo

---

## üöÄ INSTRU√á√ïES PARA IMPLEMENTA√á√ÉO

1. **Abra o arquivo `views.py`**
2. **Localize a fun√ß√£o `dashboard()` (linha ~412)**
3. **Procure pelo coment√°rio "1. EFICI√äNCIA GERAL" (linha ~935)**
4. **DELETE a linha `from datetime import datetime`**
5. **Adicione coment√°rio: "# datetime j√° importado no topo do arquivo (linha 9)"**
6. **Procure pelo bloco `custos_detalhados = {...}` (linha ~904-912)**
7. **AP√ìS esse bloco, adicione o c√≥digo de c√°lculo de margem**
8. **Localize o `return render_template` no final da fun√ß√£o (linha ~1000)**
9. **Adicione as vari√°veis `margem_percentual` e `valor_contrato_total`**
10. **Abra `templates/dashboard.html`**
11. **Localize a se√ß√£o "Financeiro e Custos"**
12. **Adicione o card de margem ap√≥s o √∫ltimo card existente**
13. **Salve todos os arquivos**
14. **Teste em desenvolvimento**
15. **Deploy em produ√ß√£o**

---

## ‚ö†Ô∏è IMPORTANTE

- **N√ÉO** altere a linha 9 onde `datetime` est√° importado globalmente
- **N√ÉO** adicione novos imports de `datetime` em nenhum lugar da fun√ß√£o
- **MANTENHA** a estrutura existente do c√≥digo
- **TESTE** em desenvolvimento antes de fazer deploy em produ√ß√£o
- **MONITORE** os logs ap√≥s deploy para confirmar que o erro desapareceu

---

## üìù NOTAS ADICIONAIS

**Outras reimporta√ß√µes encontradas:**
H√° mais 12 reimporta√ß√µes desnecess√°rias de `datetime` em outras fun√ß√µes do arquivo `views.py` (linhas: 2059, 2882, 3090, 3937, 4045, 4142, 4290, 4473, 4581, 5037, 5735, 6793). Essas podem ser removidas futuramente como melhoria de c√≥digo, mas N√ÉO s√£o cr√≠ticas agora.

**Foco:** Corrigir APENAS a linha 939 que est√° causando o erro no dashboard.

