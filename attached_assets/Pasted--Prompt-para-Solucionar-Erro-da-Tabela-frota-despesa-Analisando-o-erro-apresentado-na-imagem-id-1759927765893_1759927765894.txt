# Prompt para Solucionar Erro da Tabela frota_despesa

Analisando o erro apresentado na imagem, identifiquei que o problema est√° relacionado a uma consulta SQL que tenta acessar a coluna `obra_id` na tabela `frota_despesa`, mas essa coluna n√£o existe.

## An√°lise do Problema

**Erro:** `(psycopg2.errors.UndefinedColumn) column frota_despesa.obra_id does not exist`

**Contexto:** O erro ocorre em uma consulta SQL que tenta fazer SELECT na tabela `frota_despesa` incluindo a coluna `obra_id`, mas essa coluna n√£o foi criada na estrutura da tabela.

## Prompt para o Replit:

```
Atue como um desenvolvedor full-stack s√™nior, especialista em Flask, SQLAlchemy e migra√ß√µes de banco de dados PostgreSQL.

**O Problema:**
Estou recebendo um erro de coluna inexistente ao tentar acessar dados de ve√≠culos no meu sistema. O erro espec√≠fico √©:

```
(psycopg2.errors.UndefinedColumn) column frota_despesa.obra_id does not exist
LINE 1: ...a_despesa.veiculo_id AS frota_despesa_veiculo_id, frota_despesa.obra_id AS frota_despesa_obra_id...
```

**An√°lise do Sistema:**
1. O sistema possui um m√≥dulo de gest√£o de frotas com duas arquiteturas:
   - **Sistema Legacy:** Tabelas antigas como `uso_veiculo`, `custo_veiculo`, etc.
   - **Sistema FLEET:** Novas tabelas como `fleet_vehicle`, `fleet_vehicle_usage`, `fleet_vehicle_cost`

2. O erro indica que existe uma tabela `frota_despesa` que est√° sendo consultada, mas n√£o possui a coluna `obra_id`.

3. Analisando o reposit√≥rio, n√£o encontrei refer√™ncias diretas √† tabela `frota_despesa` no c√≥digo Python, o que sugere que pode ser:
   - Uma view do banco de dados
   - Uma tabela criada por migra√ß√£o anterior
   - Uma consulta gerada automaticamente pelo SQLAlchemy

**Tarefa:**
1. **Investigar a Origem:** Identifique de onde vem a consulta que est√° gerando o erro. Pode ser:
   - Uma view no banco de dados
   - Um modelo SQLAlchemy que n√£o est√° vis√≠vel no c√≥digo atual
   - Uma consulta em algum arquivo de views ou rotas

2. **Verificar a Estrutura da Tabela:** Execute uma consulta para verificar a estrutura atual da tabela `frota_despesa`:
   ```sql
   SELECT column_name, data_type, is_nullable 
   FROM information_schema.columns 
   WHERE table_name = 'frota_despesa' 
   ORDER BY ordinal_position;
   ```

3. **Solu√ß√£o Recomendada:** Baseado na estrutura encontrada, implemente uma das seguintes solu√ß√µes:

   **Op√ß√£o A - Adicionar a coluna faltante:**
   ```sql
   ALTER TABLE frota_despesa 
   ADD COLUMN obra_id INTEGER REFERENCES obra(id);
   ```

   **Op√ß√£o B - Atualizar a consulta para n√£o usar a coluna:**
   Modifique a consulta que est√° gerando o erro para remover a refer√™ncia √† `obra_id`.

   **Op√ß√£o C - Migrar para o sistema FLEET:**
   Se a tabela `frota_despesa` √© parte do sistema legacy, considere migrar os dados para as novas tabelas FLEET e atualizar as consultas.

4. **Implementar a Migra√ß√£o:** Crie uma fun√ß√£o de migra√ß√£o no arquivo `migrations.py` para corrigir o problema:

```python
def corrigir_tabela_frota_despesa():
    """
    Corrige a estrutura da tabela frota_despesa adicionando a coluna obra_id
    """
    try:
        logger.info("üîß Corrigindo estrutura da tabela frota_despesa...")
        
        connection = db.engine.raw_connection()
        cursor = connection.cursor()
        
        # Verificar se a coluna obra_id existe
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'frota_despesa' 
            AND column_name = 'obra_id'
        """)
        
        if not cursor.fetchone():
            logger.info("üîß Adicionando coluna obra_id na tabela frota_despesa...")
            cursor.execute("""
                ALTER TABLE frota_despesa 
                ADD COLUMN obra_id INTEGER REFERENCES obra(id)
            """)
            logger.info("‚úÖ Coluna obra_id adicionada com sucesso!")
        else:
            logger.info("‚úÖ Coluna obra_id j√° existe na tabela frota_despesa")
        
        connection.commit()
        cursor.close()
        connection.close()
        
    except Exception as e:
        logger.error(f"‚ùå Erro ao corrigir tabela frota_despesa: {e}")
```

5. **Testar a Solu√ß√£o:** Ap√≥s implementar a corre√ß√£o, teste o sistema para garantir que o erro foi resolvido.

**Entreg√°vel:**
Forne√ßa o c√≥digo da migra√ß√£o implementada e explique qual foi a causa raiz do problema e como a solu√ß√£o resolve definitivamente o erro.
```

## Observa√ß√µes Adicionais

- O erro sugere que o sistema est√° tentando fazer um JOIN ou SELECT que inclui a coluna `obra_id` da tabela `frota_despesa`
- Como n√£o encontrei refer√™ncias diretas no c√≥digo, √© prov√°vel que seja uma view ou consulta gerada automaticamente
- A solu√ß√£o mais robusta seria adicionar a coluna faltante e garantir que ela seja populada corretamente
- √â importante verificar se existem outras colunas faltantes na mesma tabela

Use este prompt para obter uma solu√ß√£o completa e definitiva para o problema.
