No sistema SIGE v3.0, precisamos implementar as funcionalidades pendentes conforme detalhado no relat√≥rio t√©cnico. O objetivo √© tornar o sistema mais completo e funcional, seguindo as prioridades estabelecidas.

Por favor, execute as seguintes a√ß√µes, priorizando as se√ß√µes:

## üî¥ CR√çTICO (Implementar Imediatamente)

1.  **Sistema de Relat√≥rios Din√¢micos Funcionais:**
    *   **Problema:** A interface (`templates/relatorios.html`) est√° completa, mas os links para os relat√≥rios n√£o s√£o funcionais.
    *   **A√ß√£o:** Implemente as rotas e a l√≥gica de backend (`views.py`, `app.py`) para que os links dos relat√≥rios funcionem. Para cada relat√≥rio listado abaixo, crie ou conecte a funcionalidade que gere os dados e os exiba na interface:
        *   Lista de Funcion√°rios (filtrada)
        *   Relat√≥rio de Ponto (consolidado)
        *   Horas Extras (por per√≠odo)
        *   Relat√≥rio de Alimenta√ß√£o (detalhado)
        *   Relat√≥rios de Obras (custos, progresso)
        *   Relat√≥rios Financeiros (despesas, receitas)

2.  **Modal de Lan√ßamento de Alimenta√ß√£o em Restaurantes:**
    *   **Problema:** O modal "Novo Lan√ßamento" em `templates/alimentacao/detalhes_restaurante.html` √© apenas um placeholder e n√£o possui funcionalidade de backend.
    *   **A√ß√£o:** Implemente a funcionalidade completa para este modal, incluindo:
        *   Conex√£o com o backend para salvar os dados de lan√ßamento de alimenta√ß√£o.
        *   Valida√ß√£o dos campos de entrada (Data, Tipo, Valor, Obra, Restaurante, Observa√ß√µes).
        *   Persist√™ncia dos dados no banco de dados (tabela `HistoricoAlimentacao`).

3.  **Exporta√ß√£o de Relat√≥rios em PDF/Excel:**
    *   **Problema:** O sistema carece de funcionalidade para exportar relat√≥rios em PDF/Excel, possuindo apenas exporta√ß√£o CSV no perfil do funcion√°rio.
    *   **A√ß√£o:** Implemente a funcionalidade de exporta√ß√£o para os relat√≥rios gerados, permitindo que os usu√°rios baixem os dados em formatos PDF e Excel. Considere a utiliza√ß√£o de bibliotecas Python apropriadas para gera√ß√£o desses formatos (ex: `fpdf2` ou `ReportLab` para PDF, `openpyxl` para Excel).

4.  **M√≥dulo de Materiais Completo (se necess√°rio ao neg√≥cio):**
    *   **Problema:** O template `templates/materiais.html` existe, mas sem rotas e o modal de cadastro n√£o √© funcional. Falta modelo de dados e rotas no `views.py`.
    *   **A√ß√£o:** Se este m√≥dulo for considerado necess√°rio, implemente-o completamente, incluindo:
        *   Cria√ß√£o do modelo de dados `Material` em `models.py` com campos como Nome, unidade de medida, descri√ß√£o, pre√ßo unit√°rio.
        *   Implementa√ß√£o das rotas CRUD (Create, Read, Update, Delete) em `views.py` para gerenciar materiais.
        *   Conex√£o do modal de cadastro e edi√ß√£o com o backend.

## üü° IMPORTANTE (Pr√≥ximas Sprints)

1.  **KPIs de Alta Prioridade:**
    *   **Problema:** Os seguintes KPIs est√£o pendentes de implementa√ß√£o ou precisam de revis√£o na l√≥gica de c√°lculo (`relatorio_kpis_funcionarios.py`):
        *   **Taxa de Pontualidade:** Percentual de dias sem atraso.
        *   **Efici√™ncia de Trabalho:** Horas produtivas vs horas pagas.
        *   **Custo por Hora Produtiva:** Custo total √∑ horas efetivamente trabalhadas.
        *   **Taxa de Rotatividade:** Entradas e sa√≠das de funcion√°rios.
        *   **√çndice de Satisfa√ß√£o:** Baseado em avalia√ß√µes e ocorr√™ncias.
    *   **A√ß√£o:** Implemente a l√≥gica de c√°lculo para cada um desses KPIs no `relatorio_kpis_funcionarios.py` e garanta que sejam exibidos corretamente na interface.

2.  **Sistema de Aprova√ß√£o de Ocorr√™ncias:**
    *   **Problema:** Ocorr√™ncias possuem status, mas n√£o h√° um workflow de aprova√ß√£o.
    *   **A√ß√£o:** Implemente um sistema de aprova√ß√£o hier√°rquica para as ocorr√™ncias, permitindo que usu√°rios com permiss√µes espec√≠ficas possam aprovar ou rejeitar ocorr√™ncias, alterando seu status e registrando a a√ß√£o.

3.  **Controle de Acesso e Permiss√µes:**
    *   **Problema:** O sistema n√£o possui n√≠veis de permiss√£o.
    *   **A√ß√£o:** Implemente um sistema de roles e permiss√µes por m√≥dulo, garantindo que diferentes tipos de usu√°rios (ex: Administrador, Gerente, Funcion√°rio) tenham acesso apenas √†s funcionalidades e dados relevantes para suas fun√ß√µes.

4.  **Gest√£o Financeira Avan√ßada:**
    *   **Problema:** Apenas custos b√°sicos implementados.
    *   **A√ß√£o:** Expanda a gest√£o financeira para incluir:
        *   Controle de receitas.
        *   Fluxo de caixa.
        *   Or√ßamentos vs Realizados.
        *   Centros de custo.

## üü¢ DESEJ√ÅVEL (Backlog)

1.  **Integra√ß√µes Externas (APIs):**
    *   **Pendente:** Integra√ß√£o com APIs externas para CEP, valida√ß√£o de CPF/CNPJ e sistemas de pagamento.
    *   **A√ß√£o:** Implemente as integra√ß√µes necess√°rias para automatizar a valida√ß√£o de dados e facilitar transa√ß√µes.

2.  **Sistema de Notifica√ß√µes em Tempo Real:**
    *   **Problema:** Apenas flash messages b√°sicas.
    *   **A√ß√£o:** Implemente um sistema de notifica√ß√µes em tempo real para alertar os usu√°rios sobre eventos importantes (ex: aprova√ß√£o de ocorr√™ncia, novo lan√ßamento de ponto).

3.  **Auditoria e Logs:**
    *   **Problema:** Sem rastreamento de altera√ß√µes.
    *   **A√ß√£o:** Implemente um sistema de auditoria para registrar as a√ß√µes dos usu√°rios e as altera√ß√µes nos dados do sistema.

4.  **Backup Automatizado:**
    *   **Problema:** Sem sistema automatizado de backup.
    *   **A√ß√£o:** Implemente rotinas de backup e recupera√ß√£o automatizadas para garantir a seguran√ßa e a integridade dos dados do sistema.

**Considera√ß√µes Gerais:**

*   Mantenha a arquitetura Flask atual e o uso de Bootstrap para o frontend.
*   Implemente loading states para a√ß√µes demoradas e adicione valida√ß√µes JavaScript mais robustas.
*   Considere a implementa√ß√£o de cache para relat√≥rios pesados e otimize queries de banco de dados com √≠ndices adequados.
*   Implemente migrations formais para o banco de dados.

Este prompt serve como um guia abrangente para as pr√≥ximas etapas de desenvolvimento do SIGE v3.0, focando nas funcionalidades que trar√£o maior valor e estabilidade ao sistema.

