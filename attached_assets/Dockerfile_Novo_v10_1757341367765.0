# DOCKERFILE SIGE v10.0 - DIGITAL MASTERY PRODUCTION
# Otimizado para EasyPanel/Hostinger - Joris Kuypers Architecture
# Data: 2025-09-08 - Versão: 10.0.1

FROM python:3.11-slim

# Metadata
LABEL maintainer="Cassio Viller <cassio@sige.tech>"
LABEL version="10.0.1"
LABEL description="SIGE Digital Mastery - Sistema Integrado de Gestão Empresarial"

# Variáveis de ambiente para produção
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV FLASK_ENV=production
ENV FLASK_APP=app.py
ENV DIGITAL_MASTERY_MODE=true
ENV OBSERVABILITY_ENABLED=true
ENV LOG_LEVEL=INFO

# Configurações de timezone
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    wget \
    git \
    build-essential \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário não-root para segurança
RUN useradd --create-home --shell /bin/bash sige
WORKDIR /app

# Copiar arquivos de dependências primeiro (para cache do Docker)
COPY pyproject.toml ./
COPY requirements.txt* ./

# Instalar dependências Python
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -e .

# Copiar código da aplicação
COPY --chown=sige:sige . .

# Criar diretórios necessários
RUN mkdir -p /app/logs /app/uploads /app/static/uploads /app/backups
RUN chown -R sige:sige /app

# Tornar scripts executáveis
RUN chmod +x /app/docker-entrypoint.sh
RUN chmod +x /app/scripts/*.py 2>/dev/null || true

# Configurar permissões
RUN chown -R sige:sige /app
USER sige

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expor porta
EXPOSE 5000

# Entrypoint
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["python", "app.py"]

