# üéØ PROMPT PARA REPLIT AGENT - Relat√≥rio de Diagn√≥stico do Dashboard

**COPIE TODO ESTE CONTE√öDO E COLE NO REPLIT AGENT**

---

## üìã CONTEXTO

Sistema SIGE v8.0 - Dashboard apresentando m√∫ltiplas KPIs zeradas ap√≥s corre√ß√µes recentes.

**Status Atual:**
- ‚úÖ **P√°gina de Funcion√°rios:** FUNCIONANDO (ap√≥s corre√ß√£o do campo `jornada_semanal`)
- ‚ùå **Dashboard:** M√öLTIPLAS SE√á√ïES ZERADAS

---

## üéØ OBJETIVO

Gerar um **RELAT√ìRIO T√âCNICO COMPLETO** diagnosticando TODOS os problemas do dashboard, incluindo:

1. **An√°lise de cada se√ß√£o** que est√° zerada
2. **Identifica√ß√£o da causa raiz** de cada problema
3. **Localiza√ß√£o exata** no c√≥digo (arquivo, linha, fun√ß√£o)
4. **Queries SQL** que est√£o falhando
5. **Filtros de multi-tenancy** que podem estar incorretos
6. **Depend√™ncias** entre as KPIs
7. **Prioriza√ß√£o** dos problemas (cr√≠tico, alto, m√©dio, baixo)
8. **Estimativa de esfor√ßo** para cada corre√ß√£o

---

## üìä PROBLEMAS OBSERVADOS NO DASHBOARD

### ‚ùå SE√á√ÉO 1: Vis√£o Geral (TUDO ZERADO)

**Observado:**
- Funcion√°rios Ativos: **0** (deveria mostrar 21)
- Obras Ativas: **0** (deveria mostrar quantidade de obras ativas)
- Ve√≠culos: **0** (deveria mostrar quantidade de ve√≠culos)
- Custos do Per√≠odo: **R$ 0.00** (deveria mostrar custos totais)

**Compara√ß√£o:**
- Na p√°gina `/funcionarios`: mostra **21 funcion√°rios ativos** ‚úÖ
- No dashboard `/dashboard`: mostra **0 funcion√°rios ativos** ‚ùå

**Hip√≥teses:**
- Filtro de `admin_id` incorreto?
- Per√≠odo de data incorreto?
- Query diferente entre dashboard e p√°gina de funcion√°rios?

---

### ‚ùå SE√á√ÉO 2: Financeiro e Custos (TUDO ZERADO)

**Observado:**
- Alimenta√ß√£o: **R$ 0.00**
- Transporte: **R$ 0.00**
- M√£o de Obra: **R$ 0.00**
- Outros: **R$ 0.00**
- Faltas Justificadas: **0 dias** / **R$ 0.00**
- Total: **R$ 0.00**

**Compara√ß√£o:**
- Na p√°gina `/funcionarios`: mostra **R$ 60.925,64** de custo total ‚úÖ
- No dashboard `/dashboard`: mostra **R$ 0.00** ‚ùå

**Hip√≥teses:**
- M√£o de Obra deveria puxar dados da mesma query de `/funcionarios`?
- Queries de Alimenta√ß√£o, Transporte, Outros sem filtro de `admin_id`?
- Per√≠odo de data diferente entre dashboard e funcion√°rios?

---

### ‚ùå SE√á√ÉO 3: Recursos Humanos

**Observado:**
- Funcion√°rios por Departamento: **vazio** (sem gr√°fico)
- Funcion√°rios Recentes: **"Nenhum funcion√°rio recente"**

**Compara√ß√£o:**
- Na p√°gina `/funcionarios`: lista **21 funcion√°rios** ‚úÖ
- No dashboard: n√£o mostra nenhum ‚ùå

---

### ‚ùå SE√á√ÉO 4: Obras e RDO

**Observado:**
- Progresso das Obras: **"Nenhuma obra ativa"**
- Mensagem: "Cadastre obras para acompanhar o progresso"

**Hip√≥teses:**
- Filtro de status de obra incorreto?
- Filtro de `admin_id` incorreto?
- Obras existem mas n√£o est√£o com status correto?

---

### ‚ùå SE√á√ÉO 5: Propostas Comerciais

**Observado:**
- Taxa de Convers√£o: **0%**
- Valor M√©dio: **R$ 0.00**
- Tempo Resp. M√©dio: **0 dias**
- Propostas/M√™s: **0**

**Hip√≥teses:**
- N√£o h√° propostas cadastradas?
- Filtro de `admin_id` incorreto?
- Queries sem dados no per√≠odo selecionado?

---

## üîç AN√ÅLISE REQUERIDA

Para CADA se√ß√£o do dashboard, o relat√≥rio deve incluir:

### 1. **Identifica√ß√£o da Query**
```python
# Exemplo:
# Arquivo: views.py
# Fun√ß√£o: dashboard()
# Linha: XXX
# Query:
funcionarios_ativos = Funcionario.query.filter_by(
    admin_id=admin_id,
    ativo=True
).count()
```

### 2. **Verifica√ß√£o de Filtros**
- ‚úÖ Tem filtro de `admin_id`?
- ‚úÖ Filtro de `admin_id` est√° correto?
- ‚úÖ Tem filtro de per√≠odo (data_inicio, data_fim)?
- ‚úÖ Per√≠odo est√° sendo passado corretamente?

### 3. **Compara√ß√£o com P√°ginas que Funcionam**
```python
# Exemplo:
# /funcionarios (FUNCIONA):
funcionarios = Funcionario.query.filter_by(
    admin_id=admin_id,
    ativo=True
).all()  # Retorna 21 funcion√°rios

# /dashboard (N√ÉO FUNCIONA):
funcionarios_ativos = Funcionario.query.filter_by(
    admin_id=admin_id,
    ativo=True
).count()  # Retorna 0

# DIFEREN√áA IDENTIFICADA: ???
```

### 4. **Teste de Hip√≥teses**
- Executar query manualmente no Python
- Verificar valor de `admin_id` no dashboard
- Verificar valor de `data_inicio` e `data_fim`
- Comparar com valores na p√°gina de funcion√°rios

### 5. **Causa Raiz**
- Descri√ß√£o clara do problema
- Por que est√° falhando
- Diferen√ßa entre o que est√° e o que deveria estar

### 6. **Solu√ß√£o Proposta**
- C√≥digo antes (incorreto)
- C√≥digo depois (correto)
- Explica√ß√£o da corre√ß√£o

### 7. **Prioridade e Esfor√ßo**
- üî¥ Cr√≠tico / üü° Alto / üü¢ M√©dio / ‚ö™ Baixo
- Tempo estimado: 15min / 1h / 4h / 1 dia

---

## üìÇ ARQUIVOS A ANALISAR

### Arquivo Principal:
- `views.py` - Fun√ß√£o `dashboard()` (aproximadamente linhas 350-1000)

### Arquivos Auxiliares:
- `utils.py` - Fun√ß√µes de c√°lculo
- `kpis_engine.py` - Engine de KPIs
- `templates/dashboard.html` - Template do dashboard

### Modelos:
- `models.py` - Modelos: Funcionario, Obra, RegistroPonto, VehicleExpense, RegistroAlimentacao, OutroCusto, PropostaComercial

---

## üìã FORMATO DO RELAT√ìRIO

O relat√≥rio deve seguir esta estrutura:

```markdown
# RELAT√ìRIO T√âCNICO: Diagn√≥stico Completo do Dashboard SIGE v8.0

**Data:** [data atual]
**Vers√£o do Sistema:** v8.0
**Ambiente:** Desenvolvimento (Replit)

---

## üìä SUM√ÅRIO EXECUTIVO

- Total de Se√ß√µes Analisadas: X
- Se√ß√µes com Problemas: Y
- Problemas Cr√≠ticos: Z
- Estimativa Total de Corre√ß√£o: Xh

---

## üîç AN√ÅLISE DETALHADA POR SE√á√ÉO

### SE√á√ÉO 1: Vis√£o Geral

#### KPI 1.1: Funcion√°rios Ativos

**Status:** ‚ùå QUEBRADO

**Valor Atual:** 0  
**Valor Esperado:** 21

**Localiza√ß√£o do C√≥digo:**
- Arquivo: `views.py`
- Fun√ß√£o: `dashboard()`
- Linha: XXX

**Query Atual:**
```python
[c√≥digo da query]
```

**Problema Identificado:**
[descri√ß√£o clara do problema]

**Causa Raiz:**
[explica√ß√£o t√©cnica]

**Compara√ß√£o com C√≥digo que Funciona:**
```python
# /funcionarios (FUNCIONA):
[c√≥digo que funciona]

# /dashboard (N√ÉO FUNCIONA):
[c√≥digo que n√£o funciona]

# DIFEREN√áA:
[explica√ß√£o da diferen√ßa]
```

**Solu√ß√£o Proposta:**
```python
# ANTES (INCORRETO):
[c√≥digo incorreto]

# DEPOIS (CORRETO):
[c√≥digo correto]
```

**Prioridade:** üî¥ CR√çTICA  
**Esfor√ßo:** 15 minutos  
**Depend√™ncias:** Nenhuma

---

#### KPI 1.2: Obras Ativas

[mesma estrutura...]

---

### SE√á√ÉO 2: Financeiro e Custos

[mesma estrutura para cada KPI...]

---

## üìä RESUMO DE CORRE√á√ïES

| Se√ß√£o | KPI | Problema | Prioridade | Esfor√ßo |
|-------|-----|----------|------------|---------|
| Vis√£o Geral | Funcion√°rios Ativos | Query sem dados | üî¥ Cr√≠tica | 15min |
| Vis√£o Geral | Obras Ativas | Filtro incorreto | üî¥ Cr√≠tica | 30min |
| ... | ... | ... | ... | ... |

**Total de Corre√ß√µes:** X  
**Tempo Total Estimado:** Yh

---

## üéØ ROADMAP DE CORRE√á√ïES

### FASE 1 - CR√çTICO (1-2 horas)
1. Corrigir Funcion√°rios Ativos
2. Corrigir Obras Ativas
3. Corrigir Custos do Per√≠odo

### FASE 2 - ALTO (2-4 horas)
4. Corrigir M√£o de Obra
5. Corrigir Alimenta√ß√£o
6. Corrigir Transporte

### FASE 3 - M√âDIO (1-2 horas)
7. Corrigir Outros Custos
8. Corrigir Propostas Comerciais

---

## üîç OBSERVA√á√ïES T√âCNICAS

[Qualquer observa√ß√£o adicional relevante]

---

FIM DO RELAT√ìRIO
```

---

## ‚öôÔ∏è INSTRU√á√ïES PARA O REPLIT AGENT

1. **Analisar o arquivo `views.py`**, especialmente a fun√ß√£o `dashboard()`
2. **Identificar TODAS as queries** que calculam KPIs
3. **Comparar com queries** da p√°gina `/funcionarios` que est√° funcionando
4. **Verificar filtros** de `admin_id` e per√≠odo
5. **Testar hip√≥teses** sobre por que est√° zerado
6. **Documentar TUDO** no formato especificado acima
7. **Priorizar** os problemas por impacto e urg√™ncia
8. **Estimar esfor√ßo** realista para cada corre√ß√£o

---

## üéØ RESULTADO ESPERADO

Um **relat√≥rio t√©cnico completo** em Markdown que:

‚úÖ Identifica TODOS os problemas do dashboard  
‚úÖ Explica a causa raiz de cada um  
‚úÖ Compara com c√≥digo que funciona  
‚úÖ Prop√µe solu√ß√µes espec√≠ficas  
‚úÖ Prioriza as corre√ß√µes  
‚úÖ Estima o esfor√ßo necess√°rio  
‚úÖ Fornece um roadmap de implementa√ß√£o

---

## üìù OBSERVA√á√ÉO IMPORTANTE

**N√ÉO IMPLEMENTE AS CORRE√á√ïES AINDA!**

Apenas gere o relat√≥rio de diagn√≥stico. As corre√ß√µes ser√£o implementadas em uma segunda etapa, ap√≥s revis√£o do relat√≥rio.

---

**FIM DO PROMPT - COPIE TUDO E COLE NO REPLIT AGENT**

