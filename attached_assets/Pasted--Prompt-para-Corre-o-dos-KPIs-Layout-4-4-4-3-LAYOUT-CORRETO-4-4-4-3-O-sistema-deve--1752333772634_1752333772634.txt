# Prompt para Correção dos KPIs - Layout 4-4-4-3

## 🎯 LAYOUT CORRETO: 4-4-4-3

O sistema deve ter **15 KPIs** organizados em **4 linhas**:

### **📊 ESTRUTURA DO GRID:**

```
┌─────────────┬─────────────┬─────────────┬─────────────┐
│ LINHA 1: 4 KPIs BÁSICOS                               │
├─────────────┼─────────────┼─────────────┼─────────────┤
│ Horas Trab. │ Horas Extras│ Faltas      │ Atrasos     │
│ 88.75h      │ 18.0h       │ 1           │ 2.25h       │
├─────────────┼─────────────┼─────────────┼─────────────┤
│ LINHA 2: 4 KPIs ANALÍTICOS                            │
├─────────────┼─────────────┼─────────────┼─────────────┤
│ Produtiv.   │ Absenteísmo │ Média Diária│ Faltas Just.│
│ 55.5%       │ 5.0%        │ 6.8h        │ 1           │
├─────────────┼─────────────┼─────────────┼─────────────┤
│ LINHA 3: 4 KPIs FINANCEIROS                           │
├─────────────┼─────────────┼─────────────┼─────────────┤
│ Custo M.O.  │ Custo Alim. │ Custo Transp│ Outros Cust.│
│ R$ 1.009,09 │ R$ 171,00   │ R$ 0,00     │ R$ 825,80   │
├─────────────┼─────────────┼─────────────┴─────────────┤
│ LINHA 4: 3 KPIs RESUMO                                │
├─────────────┼─────────────┼───────────────────────────┤
│ Custo Total │ Eficiência  │ Horas Perdidas            │
│ R$ 2.005,89 │ 51.1%       │ 10.25h                    │
└─────────────┴─────────────┴───────────────────────────┘
```

---

## 🔧 IMPLEMENTAÇÃO CORRIGIDA

### **Engine de KPIs v4.0 - 15 Indicadores**

```python
def calcular_kpis_funcionario_v4(funcionario_id, data_inicio=None, data_fim=None):
    """
    Engine de KPIs v4.0 - Layout 4-4-4-3 (15 KPIs)
    """
    from datetime import date
    import calendar
    
    if not data_inicio or not data_fim:
        hoje = date.today()
        data_inicio = hoje.replace(day=1)
        data_fim = date(hoje.year, hoje.month, calendar.monthrange(hoje.year, hoje.month)[1])
    
    funcionario = Funcionario.query.get(funcionario_id)
    if not funcionario:
        return None
    
    # 1. HORAS TRABALHADAS
    horas_trabalhadas = db.session.query(
        func.coalesce(func.sum(RegistroPonto.horas_trabalhadas), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_trabalhadas.isnot(None)
    ).scalar() or 0
    
    # 2. HORAS EXTRAS
    horas_extras = db.session.query(
        func.coalesce(func.sum(RegistroPonto.horas_extras), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_extras > 0
    ).scalar() or 0
    
    # 3. FALTAS SEPARADAS
    faltas_nao_justificadas = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.tipo_registro == 'falta'  # Apenas não justificadas
    ).count()
    
    faltas_justificadas = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.tipo_registro == 'falta_justificada'  # Apenas justificadas
    ).count()
    
    # 4. ATRASOS
    atrasos_horas = db.session.query(
        func.coalesce(func.sum(RegistroPonto.total_atraso_horas), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim
    ).scalar() or 0
    
    # 5. CÁLCULOS DERIVADOS
    dias_uteis = calcular_dias_uteis_mes(data_inicio.year, data_inicio.month)
    horas_esperadas = dias_uteis * 8
    
    # Produtividade
    produtividade = (horas_trabalhadas / horas_esperadas * 100) if horas_esperadas > 0 else 0
    
    # Absenteísmo (APENAS faltas não justificadas)
    absenteismo = (faltas_nao_justificadas / dias_uteis * 100) if dias_uteis > 0 else 0
    
    # Média diária
    dias_trabalhados = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_trabalhadas > 0
    ).count()
    
    media_diaria = (horas_trabalhadas / dias_trabalhados) if dias_trabalhados > 0 else 0
    
    # Horas perdidas
    horas_perdidas = (faltas_nao_justificadas * 8) + atrasos_horas
    
    # 6. CUSTOS
    salario_hora = funcionario.salario / 220 if funcionario.salario else 0
    
    # Custo mão de obra (incluindo horas extras)
    custo_normal = horas_trabalhadas * salario_hora
    custo_extras = horas_extras * salario_hora * 1.5  # 50% adicional
    custo_mao_obra = custo_normal + custo_extras
    
    # Custo alimentação
    custo_alimentacao = db.session.query(
        func.coalesce(func.sum(RegistroAlimentacao.valor), 0)
    ).filter(
        RegistroAlimentacao.funcionario_id == funcionario_id,
        RegistroAlimentacao.data >= data_inicio,
        RegistroAlimentacao.data <= data_fim
    ).scalar() or 0
    
    # Custo transporte
    custo_transporte = db.session.query(
        func.coalesce(func.sum(CustoVeiculo.valor), 0)
    ).filter(
        CustoVeiculo.funcionario_id == funcionario_id,
        CustoVeiculo.data >= data_inicio,
        CustoVeiculo.data <= data_fim
    ).scalar() or 0
    
    # Outros custos
    outros_custos = db.session.query(
        func.coalesce(func.sum(OutroCusto.valor), 0)
    ).filter(
        OutroCusto.funcionario_id == funcionario_id,
        OutroCusto.data >= data_inicio,
        OutroCusto.data <= data_fim
    ).scalar() or 0
    
    # Custo total
    custo_total = custo_mao_obra + custo_alimentacao + custo_transporte + outros_custos
    
    # Eficiência (produtividade ajustada por qualidade)
    eficiencia = produtividade * (1 - (absenteismo / 100))
    
    return {
        # LINHA 1: KPIs Básicos (4)
        'horas_trabalhadas': round(horas_trabalhadas, 1),
        'horas_extras': round(horas_extras, 1),
        'faltas': faltas_nao_justificadas,
        'atrasos': round(atrasos_horas, 2),
        
        # LINHA 2: KPIs Analíticos (4)
        'produtividade': round(produtividade, 1),
        'absenteismo': round(absenteismo, 1),
        'media_diaria': round(media_diaria, 1),
        'faltas_justificadas': faltas_justificadas,
        
        # LINHA 3: KPIs Financeiros (4)
        'custo_mao_obra': round(custo_mao_obra, 2),
        'custo_alimentacao': round(custo_alimentacao, 2),
        'custo_transporte': round(custo_transporte, 2),
        'outros_custos': round(outros_custos, 2),
        
        # LINHA 4: KPIs Resumo (3)
        'custo_total': round(custo_total, 2),
        'eficiencia': round(eficiencia, 1),
        'horas_perdidas': round(horas_perdidas, 1),
        
        # Dados auxiliares
        'dias_trabalhados': dias_trabalhados,
        'dias_uteis': dias_uteis,
        'horas_esperadas': horas_esperadas,
        'salario_hora': salario_hora
    }
```

### **Template HTML - Layout 4-4-4-3**

```html
<!-- Grid com 15 KPIs organizados em 4-4-4-3 -->
<div class="kpis-container">
    <h3>📊 Indicadores de Desempenho</h3>
    
    <!-- LINHA 1: 4 KPIs Básicos -->
    <div class="kpis-row-4">
        <div class="kpi-card primary">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.horas_trabalhadas) }}h</div>
            <div class="kpi-label">Horas Trabalhadas</div>
        </div>
        
        <div class="kpi-card warning">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.horas_extras) }}h</div>
            <div class="kpi-label">Horas Extras</div>
        </div>
        
        <div class="kpi-card {{ 'danger' if kpis.faltas > 0 else 'success' }}">
            <div class="kpi-valor">{{ kpis.faltas }}</div>
            <div class="kpi-label">Faltas</div>
            <div class="kpi-info">Não justificadas</div>
        </div>
        
        <div class="kpi-card info">
            <div class="kpi-valor">{{ "%.2f"|format(kpis.atrasos) }}h</div>
            <div class="kpi-label">Atrasos</div>
        </div>
    </div>
    
    <!-- LINHA 2: 4 KPIs Analíticos -->
    <div class="kpis-row-4">
        <div class="kpi-card success">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.produtividade) }}%</div>
            <div class="kpi-label">Produtividade</div>
        </div>
        
        <div class="kpi-card info">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.absenteismo) }}%</div>
            <div class="kpi-label">Absenteísmo</div>
        </div>
        
        <div class="kpi-card primary">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.media_diaria) }}h</div>
            <div class="kpi-label">Média Diária</div>
        </div>
        
        <div class="kpi-card warning">
            <div class="kpi-valor">{{ kpis.faltas_justificadas }}</div>
            <div class="kpi-label">Faltas Justificadas</div>
            <div class="kpi-info">Com atestado</div>
        </div>
    </div>
    
    <!-- LINHA 3: 4 KPIs Financeiros -->
    <div class="kpis-row-4">
        <div class="kpi-card success">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.custo_mao_obra) }}</div>
            <div class="kpi-label">Custo Mão de obra</div>
        </div>
        
        <div class="kpi-card info">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.custo_alimentacao) }}</div>
            <div class="kpi-label">Custo Alimentação</div>
        </div>
        
        <div class="kpi-card warning">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.custo_transporte) }}</div>
            <div class="kpi-label">Custo Transporte</div>
        </div>
        
        <div class="kpi-card danger">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.outros_custos) }}</div>
            <div class="kpi-label">Outros Custos</div>
        </div>
    </div>
    
    <!-- LINHA 4: 3 KPIs Resumo -->
    <div class="kpis-row-3">
        <div class="kpi-card-large primary">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.custo_total) }}</div>
            <div class="kpi-label">Custo Total</div>
            <div class="kpi-info">Todos os custos do funcionário</div>
        </div>
        
        <div class="kpi-card-large success">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.eficiencia) }}%</div>
            <div class="kpi-label">Eficiência</div>
            <div class="kpi-info">Produtividade ajustada</div>
        </div>
        
        <div class="kpi-card-large danger">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.horas_perdidas) }}h</div>
            <div class="kpi-label">Horas Perdidas</div>
            <div class="kpi-info">Faltas + atrasos</div>
        </div>
    </div>
</div>
```

### **CSS para Layout 4-4-4-3**

```css
/* Grid 4-4-4-3 */
.kpis-row-4 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 15px;
    margin-bottom: 20px;
}

.kpis-row-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    margin-bottom: 20px;
}

.kpi-card {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 20px;
    text-align: center;
    transition: all 0.3s ease;
}

.kpi-card-large {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 25px;
    text-align: center;
    transition: all 0.3s ease;
}

.kpi-valor {
    font-size: 2.2rem;
    font-weight: bold;
    margin-bottom: 8px;
}

.kpi-label {
    font-size: 0.9rem;
    color: var(--text-muted);
    margin-bottom: 4px;
}

.kpi-info {
    font-size: 0.75rem;
    color: var(--text-muted);
    opacity: 0.8;
}

/* Cores por tipo */
.kpi-card.primary { border-left: 4px solid #007bff; }
.kpi-card.success { border-left: 4px solid #28a745; }
.kpi-card.warning { border-left: 4px solid #ffc107; }
.kpi-card.danger { border-left: 4px solid #dc3545; }
.kpi-card.info { border-left: 4px solid #17a2b8; }

/* Responsivo */
@media (max-width: 1200px) {
    .kpis-row-4 {
        grid-template-columns: repeat(2, 1fr);
    }
    .kpis-row-3 {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 768px) {
    .kpis-row-4,
    .kpis-row-3 {
        grid-template-columns: 1fr;
    }
}
```

---

## 📊 RESULTADOS ESPERADOS PARA JOÃO

### **Layout 4-4-4-3 Completo:**

**LINHA 1 (Básicos):**
- Horas Trabalhadas: 88.75h
- Horas Extras: 18.0h  
- Faltas: 1
- Atrasos: 2.25h

**LINHA 2 (Analíticos):**
- Produtividade: 55.5%
- Absenteísmo: 5.0%
- Média Diária: 6.8h
- Faltas Justificadas: 1

**LINHA 3 (Financeiros):**
- Custo Mão de Obra: R$ 1.009,09
- Custo Alimentação: R$ 171,00
- Custo Transporte: R$ 0,00
- Outros Custos: R$ 825,80

**LINHA 4 (Resumo):**
- Custo Total: R$ 2.005,89
- Eficiência: 51.1%
- Horas Perdidas: 10.25h

---

## ✅ CORREÇÕES IMPLEMENTADAS

1. **Layout 4-4-4-3** com 15 KPIs únicos
2. **Faltas separadas** (justificadas vs não justificadas)
3. **Absenteísmo corrigido** (5.0% não 10.0%)
4. **Horas perdidas única** (não duplicada)
5. **Custo total calculado** corretamente
6. **Grid responsivo** para mobile

Agora o sistema terá o layout correto com todos os 15 KPIs organizados!

