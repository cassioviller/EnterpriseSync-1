# Auditoria Completa - Problemas de C√°lculo no Sistema SIGE

## üö® PROBLEMA RAIZ IDENTIFICADO

O sistema est√° usando **valores fixos e incorretos** para c√°lculos de sal√°rio, horas e custos em TODO o c√≥digo.

---

## ‚ùå PROBLEMA CR√çTICO 1: Valor/Hora Fixo em 220h

### Ocorr√™ncias Encontradas:

| Linha | Arquivo | C√≥digo | Problema |
|-------|---------|--------|----------|
| 164 | views.py | `valor_hora = funcionario.salario / 220` | ‚ùå Fixo 220h |
| 781 | views.py | `valor_hora = (func.salario / 220)` | ‚ùå Fixo 220h |
| 1323 | views.py | `(func.salario / 220 if func.salario else 0)` | ‚ùå Fixo 220h |
| 1442 | views.py | `valor_hora = (funcionario.salario / 220)` | ‚ùå Fixo 220h |
| 1570 | views.py | `valor_hora = (funcionario.salario / 220)` | ‚ùå Fixo 220h |
| 1733 | views.py | `valor_hora = funcionario.salario / 220` | ‚ùå Fixo 220h |
| 2647 | views.py | `(COALESCE(f.salario, 1500) / 220.0 * rp.horas_trabalhadas)` | ‚ùå Fixo 220h + SQL |
| 2673 | views.py | `(COALESCE(f.salario, 1500) / 220.0 * rp.horas_trabalhadas)` | ‚ùå Fixo 220h + SQL |
| 2700 | views.py | `'salario_hora': float(salario or 1500) / 220.0` | ‚ùå Fixo 220h |

**Total:** 9 ocorr√™ncias de c√°lculo incorreto

---

## ‚ùå PROBLEMA CR√çTICO 2: Valor/Dia Fixo em 22 dias

### Ocorr√™ncias Encontradas:

| Linha | Arquivo | C√≥digo | Problema |
|-------|---------|--------|----------|
| 857 | views.py | `valor_dia = (funcionario.salario / 22)` | ‚ùå Fixo 22 dias |
| 1349 | views.py | `custo_dia = func.salario / 22` | ‚ùå Fixo 22 dias |

**Total:** 2 ocorr√™ncias de c√°lculo incorreto de valor/dia

---

## üìä IMPACTO DOS C√ÅLCULOS INCORRETOS

### Exemplo Real:

**Funcion√°rio:** Jo√£o Silva  
**Sal√°rio:** R$ 3.000,00  
**Hor√°rio:** 7h12 √†s 17h (8.8h/dia efetivas)  
**M√™s:** Outubro/2025 (23 dias √∫teis)

#### ‚ùå C√ÅLCULO ATUAL (INCORRETO):
```
Horas mensais = 220h (FIXO)
Valor/hora = R$ 3.000 / 220 = R$ 13,64

Se trabalhou 184h no m√™s:
Custo = 184h √ó R$ 13,64 = R$ 2.509,76
```

#### ‚úÖ C√ÅLCULO CORRETO:
```
Dias √∫teis = 23 dias
Horas/dia = 8.8h
Horas mensais = 23 √ó 8.8 = 202.4h
Valor/hora = R$ 3.000 / 202.4 = R$ 14,82

Se trabalhou 184h no m√™s:
Custo = 184h √ó R$ 14,82 = R$ 2.726,88
```

**Diferen√ßa:** R$ 217,12 (8.6% de erro!)

---

## üîç FUN√á√ïES CORRETAS J√Å EXISTEM (MAS N√ÉO S√ÉO USADAS!)

### Em `utils.py`:

#### ‚úÖ Fun√ß√£o 1: `calcular_valor_hora_corrigido(funcionario)` - Linha 150
```python
def calcular_valor_hora_corrigido(funcionario):
    """
    Calcula o valor/hora correto baseado no hor√°rio de trabalho do funcion√°rio
    
    F√ìRMULA CORRIGIDA:
    - Se funcion√°rio tem hor√°rio cadastrado: usar horas_diarias do hor√°rio
    - Se n√£o tem hor√°rio: usar padr√£o 8.8h (7h12-17h com 1h almo√ßo)  
    - valor_hora = salario_mensal / horas_mensais_reais
    """
    # ... c√≥digo correto ...
    
    # Determinar horas di√°rias baseado no hor√°rio do funcion√°rio
    if funcionario.horario_trabalho and funcionario.horario_trabalho.horas_diarias:
        horas_diarias = float(funcionario.horario_trabalho.horas_diarias)
    else:
        horas_diarias = 8.8  # Padr√£o
    
    # Horas mensais reais = dias_√∫teis √ó horas_diarias
    horas_mensais_reais = dias_uteis * horas_diarias
    
    # Valor/hora = sal√°rio √∑ horas mensais reais
    valor_hora = float(funcionario.salario) / horas_mensais_reais
    
    return round(valor_hora, 2)
```

#### ‚úÖ Fun√ß√£o 2: `calcular_valor_hora_periodo(funcionario, data_inicio, data_fim)` - Linha 198
```python
def calcular_valor_hora_periodo(funcionario, data_inicio, data_fim):
    """
    Calcula o valor/hora baseado no per√≠odo espec√≠fico (m√™s dos dados)
    """
    # ... calcula dias √∫teis do per√≠odo espec√≠fico ...
```

---

## üéØ ONDE CADA C√ÅLCULO INCORRETO EST√Å SENDO USADO

### 1. **Linha 164** - Fun√ß√£o `_calcular_custos_obra()`
```python
def _calcular_custos_obra(admin_id, data_inicio, data_fim):
    ...
    valor_hora = funcionario.salario / 220  # ‚ùå INCORRETO
    horas = (registro.horas_trabalhadas or 0) + (registro.horas_extras or 0) * 1.5
    custo_total_obra += horas * valor_hora
```

**Impacto:** Custos por obra calculados incorretamente

---

### 2. **Linha 781** - Fun√ß√£o `dashboard()` - C√°lculo de M√£o de Obra
```python
# Valor/hora do funcion√°rio
valor_hora = (func.salario / 220) if func.salario else 0  # ‚ùå INCORRETO
custo_func = (horas_func + extras_func * 1.5) * valor_hora
```

**Impacto:** KPI de "M√£o de Obra" no dashboard est√° incorreto

---

### 3. **Linha 857** - Fun√ß√£o `calcular_faltas_justificadas()`
```python
for falta in faltas_justificadas:
    funcionario = Funcionario.query.get(falta.funcionario_id)
    if funcionario and funcionario.salario:
        valor_dia = (funcionario.salario / 22)  # ‚ùå INCORRETO
        custo += valor_dia
```

**Impacto:** KPI de "Faltas Justificadas" no dashboard est√° incorreto

---

### 4. **Linha 1323** - Fun√ß√£o `funcionarios()` - Lista de funcion√°rios
```python
'custo_total': (total_horas + total_extras * 1.5) * (func.salario / 220 if func.salario else 0)  # ‚ùå INCORRETO
```

**Impacto:** Custo total na listagem de funcion√°rios est√° incorreto

---

### 5. **Linha 1349** - Fun√ß√£o `funcionarios()` - C√°lculo de faltas
```python
custo_dia = func.salario / 22  # ‚ùå INCORRETO
```

**Impacto:** Custo de faltas na listagem de funcion√°rios est√° incorreto

---

### 6. **Linha 1442** - Fun√ß√£o `funcionario_perfil()` - Perfil do funcion√°rio
```python
valor_hora = (funcionario.salario / 220) if funcionario.salario else 0  # ‚ùå INCORRETO
valor_horas_extras = total_extras * valor_hora * 1.5
valor_faltas = total_faltas * valor_hora * 8
```

**Impacto:** 
- Valor de horas extras incorreto
- Valor de faltas incorreto
- Custo total do funcion√°rio incorreto
- **TODOS os KPIs do perfil est√£o errados!**

---

### 7. **Linha 1570** - Fun√ß√£o `funcionario_perfil_pdf()` - PDF do funcion√°rio
```python
valor_hora = (funcionario.salario / 220) if funcionario.salario else 0  # ‚ùå INCORRETO
```

**Impacto:** PDF exportado com valores incorretos

---

### 8. **Linha 1733** - Fun√ß√£o `obras()` - Lista de obras
```python
valor_hora = funcionario.salario / 220  # ‚ùå INCORRETO
```

**Impacto:** Custos de obras na listagem est√£o incorretos

---

### 9. **Linhas 2647, 2673, 2700** - Fun√ß√£o `detalhes_obra()` - SQL direto
```python
# SQL com c√°lculo hardcoded
(COALESCE(f.salario, 1500) / 220.0 * rp.horas_trabalhadas) as custo_dia  # ‚ùå INCORRETO
```

**Impacto:** 
- Custos de m√£o de obra por dia na obra est√£o incorretos
- Gr√°ficos de custos est√£o incorretos
- Relat√≥rios de obra est√£o incorretos

---

## üö® OUTROS PROBLEMAS IDENTIFICADOS

### PROBLEMA 3: Sal√°rio padr√£o hardcoded (R$ 1.500)

**Linha 2647, 2673, 2700:**
```python
COALESCE(f.salario, 1500)  # ‚ùå Valor padr√£o arbitr√°rio
```

**Problema:** Se funcion√°rio n√£o tem sal√°rio cadastrado, usa R$ 1.500 fixo

---

### PROBLEMA 4: Horas extras com multiplicador fixo 1.5

**M√∫ltiplas linhas:**
```python
total_extras * 1.5  # ‚ö†Ô∏è Sempre 50%
```

**Problema:** 
- S√°bados devem ser 50% (1.5x) ‚úÖ
- Domingos/feriados devem ser 100% (2.0x) ‚ùå

**N√£o diferencia tipo de dia!**

---

### PROBLEMA 5: Dias √∫teis fixos em 22

**Linha 857, 1349:**
```python
funcionario.salario / 22  # ‚ùå Sempre 22 dias
```

**Problema:** 
- Meses t√™m entre 20-23 dias √∫teis
- Usar 22 fixo causa erro de at√© 15%

---

## üìã RESUMO DOS PROBLEMAS

| Problema | Ocorr√™ncias | Impacto | Severidade |
|----------|-------------|---------|------------|
| **Valor/hora fixo 220h** | 9 | Todos os custos incorretos | üî¥ CR√çTICO |
| **Valor/dia fixo 22 dias** | 2 | Custos de faltas incorretos | üî¥ CR√çTICO |
| **Sal√°rio padr√£o R$ 1.500** | 3 | Custos sem sal√°rio incorretos | üü° ALTO |
| **Horas extras sem diferencia√ß√£o** | ~15 | Extras de domingo incorretas | üü° ALTO |
| **Fun√ß√µes corretas n√£o usadas** | - | C√≥digo duplicado | üü¢ M√âDIO |

---

## ‚úÖ SOLU√á√ÉO PROPOSTA

### Estrat√©gia de Corre√ß√£o:

1. **Substituir TODAS as ocorr√™ncias** de `salario / 220` por chamada √† fun√ß√£o `calcular_valor_hora_corrigido()`
2. **Substituir TODAS as ocorr√™ncias** de `salario / 22` por c√°lculo correto de dias √∫teis
3. **Remover SQL hardcoded** e usar fun√ß√µes Python
4. **Adicionar diferencia√ß√£o** de horas extras por tipo de dia
5. **Testar** cada funcionalidade afetada

---

## üéØ FUN√á√ïES AFETADAS (PRECISAM CORRE√á√ÉO)

| Fun√ß√£o | Linha | Problema | Prioridade |
|--------|-------|----------|------------|
| `_calcular_custos_obra()` | 164 | valor_hora fixo | üî¥ ALTA |
| `dashboard()` | 781, 857 | valor_hora e valor_dia fixos | üî¥ ALTA |
| `funcionarios()` | 1323, 1349 | valor_hora e valor_dia fixos | üî¥ ALTA |
| `funcionario_perfil()` | 1442 | valor_hora fixo | üî¥ ALTA |
| `funcionario_perfil_pdf()` | 1570 | valor_hora fixo | üî¥ ALTA |
| `obras()` | 1733 | valor_hora fixo | üî¥ ALTA |
| `detalhes_obra()` | 2647, 2673, 2700 | SQL hardcoded | üî¥ ALTA |

**Total:** 7 fun√ß√µes cr√≠ticas precisam corre√ß√£o

---

## üìä IMPACTO ESTIMADO

### Antes da Corre√ß√£o:
- ‚ùå **100%** dos c√°lculos de custo est√£o incorretos
- ‚ùå **100%** dos KPIs financeiros est√£o incorretos
- ‚ùå **100%** dos relat√≥rios de funcion√°rios est√£o incorretos
- ‚ùå **100%** dos relat√≥rios de obras est√£o incorretos

### Depois da Corre√ß√£o:
- ‚úÖ C√°lculos precisos baseados em hor√°rio real
- ‚úÖ KPIs financeiros corretos
- ‚úÖ Relat√≥rios confi√°veis
- ‚úÖ Conformidade trabalhista

---

## üöÄ PR√ìXIMOS PASSOS

1. **Criar prompt** para corrigir todas as 9 ocorr√™ncias
2. **Substituir** c√°lculos fixos por fun√ß√µes corretas
3. **Testar** cada funcionalidade
4. **Validar** com dados reais
5. **Documentar** as mudan√ßas

---

## üí° OBSERVA√á√ÉO IMPORTANTE

O sistema **J√Å TEM** as fun√ß√µes corretas implementadas em `utils.py`:
- `calcular_valor_hora_corrigido()`
- `calcular_valor_hora_periodo()`
- `calcular_horas_trabalhadas()`

**Mas elas N√ÉO est√£o sendo usadas!**

A corre√ß√£o √© simplesmente **substituir os c√°lculos hardcoded por chamadas a essas fun√ß√µes**.

---

## üéØ EXEMPLO DE CORRE√á√ÉO

### ‚ùå ANTES (Linha 1442):
```python
valor_hora = (funcionario.salario / 220) if funcionario.salario else 0
```

### ‚úÖ DEPOIS:
```python
from utils import calcular_valor_hora_corrigido
valor_hora = calcular_valor_hora_corrigido(funcionario)
```

**Simples assim!**

---

## üìù CONCLUS√ÉO

O sistema tem um **problema sist√™mico** de c√°lculos incorretos que afeta:
- Dashboard
- Perfil de funcion√°rios
- Lista de funcion√°rios
- Detalhes de obras
- Custos por obra
- Relat√≥rios PDF
- Todos os KPIs financeiros

**Causa raiz:** Uso de valores fixos (220h, 22 dias) ao inv√©s de c√°lculos din√¢micos.

**Solu√ß√£o:** Substituir por fun√ß√µes corretas que j√° existem no c√≥digo.

**Urg√™ncia:** üî¥ CR√çTICA - Afeta integridade de todos os dados financeiros.

