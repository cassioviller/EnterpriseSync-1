# Prompt para Corre√ß√£o Espec√≠fica dos KPIs - Jo√£o Silva dos Santos

## üö® PROBLEMAS IDENTIFICADOS NA TELA

Baseado na an√°lise da tela do perfil do Jo√£o Silva dos Santos (F0099), foram identificados os seguintes problemas:

### **1. HORAS PERDIDAS DUPLICADAS** ‚ùå
- **Problema**: "Horas Perdidas" aparece **DUAS VEZES** no grid
- **Posi√ß√£o 1**: Linha 2, Card 4 ‚Üí 18.2h
- **Posi√ß√£o 2**: Linha 3, Card 2 ‚Üí 18.2h
- **Solu√ß√£o**: Remover uma das duplicatas

### **2. FALTAS INCLUINDO FALTA JUSTIFICADA** ‚ùå
- **Problema**: Sistema est√° contando 2 faltas (incluindo falta justificada)
- **Deveria ser**: 1 falta (apenas n√£o justificada)
- **Solu√ß√£o**: Separar falta e falta justificada

### **3. LAYOUT INCORRETO** ‚ùå
- **Atual**: Grid desorganizado com duplicatas
- **Deveria ser**: Grid 4-4-2 com 10 KPIs √∫nicos

---

## üéØ CORRE√á√ïES NECESS√ÅRIAS

### **CORRE√á√ÉO 1: Separar Faltas e Faltas Justificadas**

```python
def calcular_faltas_separadas(funcionario_id, data_inicio, data_fim):
    """
    Separa faltas justificadas de n√£o justificadas
    """
    # Faltas N√ÉO justificadas (contam para absente√≠smo)
    faltas_nao_justificadas = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.tipo_registro == 'falta'  # Apenas 'falta'
    ).count()
    
    # Faltas justificadas (N√ÉO contam para absente√≠smo)
    faltas_justificadas = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.tipo_registro == 'falta_justificada'  # Apenas 'falta_justificada'
    ).count()
    
    return {
        'faltas': faltas_nao_justificadas,           # Para KPIs (1)
        'faltas_justificadas': faltas_justificadas   # Para informa√ß√£o (1)
    }
```

### **CORRE√á√ÉO 2: Implementar KPI "Faltas Justificadas"**

```python
# Substituir uma das "Horas Perdidas" por "Faltas Justificadas"
def calcular_kpis_corrigidos(funcionario_id, data_inicio, data_fim):
    # ... outros c√°lculos ...
    
    faltas_dados = calcular_faltas_separadas(funcionario_id, data_inicio, data_fim)
    
    return {
        # Linha 1 (4 KPIs b√°sicos)
        'horas_trabalhadas': horas_trabalhadas,
        'horas_extras': horas_extras,
        'faltas': faltas_dados['faltas'],                    # Apenas n√£o justificadas
        'atrasos': atrasos,
        
        # Linha 2 (4 KPIs anal√≠ticos)
        'produtividade': produtividade,
        'absenteismo': absenteismo,
        'media_diaria': media_diaria,
        'faltas_justificadas': faltas_dados['faltas_justificadas'],  # NOVO KPI
        
        # Linha 3 (2 KPIs financeiros)
        'custo_mao_obra': custo_mao_obra,
        'outros_custos': outros_custos
    }
```

### **CORRE√á√ÉO 3: Layout HTML Corrigido**

```html
<!-- Grid 4-4-2 com KPIs √∫nicos -->
<div class="kpis-grid">
    <!-- LINHA 1: 4 KPIs B√°sicos -->
    <div class="kpi-row">
        <div class="kpi-card primary">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.horas_trabalhadas) }}h</div>
            <div class="kpi-label">Horas Trabalhadas</div>
        </div>
        
        <div class="kpi-card warning">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.horas_extras) }}h</div>
            <div class="kpi-label">Horas Extras</div>
        </div>
        
        <div class="kpi-card {{ 'danger' if kpis.faltas > 0 else 'success' }}">
            <div class="kpi-valor">{{ kpis.faltas }}</div>
            <div class="kpi-label">Faltas</div>
            <div class="kpi-info">N√£o justificadas</div>
        </div>
        
        <div class="kpi-card info">
            <div class="kpi-valor">{{ "%.2f"|format(kpis.atrasos) }}h</div>
            <div class="kpi-label">Atrasos</div>
        </div>
    </div>
    
    <!-- LINHA 2: 4 KPIs Anal√≠ticos -->
    <div class="kpi-row">
        <div class="kpi-card success">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.produtividade) }}%</div>
            <div class="kpi-label">Produtividade</div>
        </div>
        
        <div class="kpi-card info">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.absenteismo) }}%</div>
            <div class="kpi-label">Absente√≠smo</div>
        </div>
        
        <div class="kpi-card primary">
            <div class="kpi-valor">{{ "%.1f"|format(kpis.media_diaria) }}h</div>
            <div class="kpi-label">M√©dia Di√°ria</div>
        </div>
        
        <div class="kpi-card warning">
            <div class="kpi-valor">{{ kpis.faltas_justificadas }}</div>
            <div class="kpi-label">Faltas Justificadas</div>
            <div class="kpi-info">Com atestado/autoriza√ß√£o</div>
        </div>
    </div>
    
    <!-- LINHA 3: 2 KPIs Financeiros -->
    <div class="kpi-row-2">
        <div class="kpi-card success">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.custo_mao_obra) }}</div>
            <div class="kpi-label">Custo M√£o de obra</div>
        </div>
        
        <div class="kpi-card danger">
            <div class="kpi-valor">R$ {{ "%.2f"|format(kpis.outros_custos) }}</div>
            <div class="kpi-label">Outros Custos</div>
        </div>
    </div>
</div>
```

### **CORRE√á√ÉO 4: F√≥rmula do Absente√≠smo Corrigida**

```python
def calcular_absenteismo_corrigido(faltas_nao_justificadas, dias_uteis):
    """
    Calcula absente√≠smo baseado APENAS em faltas n√£o justificadas
    """
    if dias_uteis == 0:
        return 0
    
    # F√≥rmula: (faltas n√£o justificadas √∑ dias √∫teis) √ó 100
    absenteismo = (faltas_nao_justificadas / dias_uteis) * 100
    return round(absenteismo, 1)

# Para Jo√£o: (1 √∑ 20) √ó 100 = 5.0% (n√£o 10.0%)
```

### **CORRE√á√ÉO 5: Engine de KPIs v4.0 Completa**

```python
def calcular_kpis_funcionario_v4(funcionario_id, data_inicio=None, data_fim=None):
    """
    Engine de KPIs v4.0 - Corre√ß√µes espec√≠ficas identificadas
    """
    from datetime import date
    import calendar
    
    if not data_inicio or not data_fim:
        hoje = date.today()
        data_inicio = hoje.replace(day=1)
        data_fim = date(hoje.year, hoje.month, calendar.monthrange(hoje.year, hoje.month)[1])
    
    funcionario = Funcionario.query.get(funcionario_id)
    if not funcionario:
        return None
    
    # 1. HORAS TRABALHADAS
    horas_trabalhadas = db.session.query(
        func.coalesce(func.sum(RegistroPonto.horas_trabalhadas), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_trabalhadas.isnot(None)
    ).scalar() or 0
    
    # 2. HORAS EXTRAS
    horas_extras = db.session.query(
        func.coalesce(func.sum(RegistroPonto.horas_extras), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_extras > 0
    ).scalar() or 0
    
    # 3. FALTAS SEPARADAS
    faltas_dados = calcular_faltas_separadas(funcionario_id, data_inicio, data_fim)
    faltas = faltas_dados['faltas']
    faltas_justificadas = faltas_dados['faltas_justificadas']
    
    # 4. ATRASOS
    atrasos_horas = db.session.query(
        func.coalesce(func.sum(RegistroPonto.total_atraso_horas), 0)
    ).filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim
    ).scalar() or 0
    
    # 5. C√ÅLCULOS DERIVADOS
    dias_uteis = calcular_dias_uteis_mes(data_inicio.year, data_inicio.month)
    horas_esperadas = dias_uteis * 8
    
    # Produtividade
    produtividade = (horas_trabalhadas / horas_esperadas * 100) if horas_esperadas > 0 else 0
    
    # Absente√≠smo (APENAS faltas n√£o justificadas)
    absenteismo = calcular_absenteismo_corrigido(faltas, dias_uteis)
    
    # M√©dia di√°ria
    dias_trabalhados = RegistroPonto.query.filter(
        RegistroPonto.funcionario_id == funcionario_id,
        RegistroPonto.data >= data_inicio,
        RegistroPonto.data <= data_fim,
        RegistroPonto.horas_trabalhadas > 0
    ).count()
    
    media_diaria = (horas_trabalhadas / dias_trabalhados) if dias_trabalhados > 0 else 0
    
    # 6. CUSTOS
    salario_hora = funcionario.salario / 220 if funcionario.salario else 0
    custo_mao_obra = horas_trabalhadas * salario_hora
    
    # Custo alimenta√ß√£o
    custo_alimentacao = db.session.query(
        func.coalesce(func.sum(RegistroAlimentacao.valor), 0)
    ).filter(
        RegistroAlimentacao.funcionario_id == funcionario_id,
        RegistroAlimentacao.data >= data_inicio,
        RegistroAlimentacao.data <= data_fim
    ).scalar() or 0
    
    # Outros custos
    outros_custos = db.session.query(
        func.coalesce(func.sum(OutroCusto.valor), 0)
    ).filter(
        OutroCusto.funcionario_id == funcionario_id,
        OutroCusto.data >= data_inicio,
        OutroCusto.data <= data_fim
    ).scalar() or 0
    
    return {
        # Linha 1: KPIs B√°sicos
        'horas_trabalhadas': round(horas_trabalhadas, 1),
        'horas_extras': round(horas_extras, 1),
        'faltas': faltas,
        'atrasos': round(atrasos_horas, 2),
        
        # Linha 2: KPIs Anal√≠ticos
        'produtividade': round(produtividade, 1),
        'absenteismo': round(absenteismo, 1),
        'media_diaria': round(media_diaria, 1),
        'faltas_justificadas': faltas_justificadas,
        
        # Linha 3: KPIs Financeiros
        'custo_mao_obra': round(custo_mao_obra, 2),
        'outros_custos': round(outros_custos, 2),
        
        # Dados auxiliares
        'custo_alimentacao': round(custo_alimentacao, 2),
        'dias_trabalhados': dias_trabalhados,
        'dias_uteis': dias_uteis,
        'horas_esperadas': horas_esperadas
    }
```

---

## üìä RESULTADOS ESPERADOS PARA JO√ÉO

Com as corre√ß√µes implementadas:

### **KPIs Corrigidos:**
1. **Horas Trabalhadas**: 88.75h (conforme arquivo)
2. **Horas Extras**: 18.0h ‚úÖ
3. **Faltas**: 1 (apenas n√£o justificada)
4. **Atrasos**: 2.25h ‚úÖ
5. **Produtividade**: 55.5% (88.75 √∑ 160)
6. **Absente√≠smo**: 5.0% (1 √∑ 20)
7. **M√©dia Di√°ria**: 6.8h (88.75 √∑ 13 dias)
8. **Faltas Justificadas**: 1 (nova informa√ß√£o)
9. **Custo M√£o de Obra**: R$ 1.009,09
10. **Outros Custos**: R$ 825,80

### **Layout Final:**
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ 88.75h      ‚îÇ 18.0h       ‚îÇ 1           ‚îÇ 2.25h       ‚îÇ
‚îÇ Hrs Trab.   ‚îÇ Hrs Extras  ‚îÇ Faltas      ‚îÇ Atrasos     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 55.5%       ‚îÇ 5.0%        ‚îÇ 6.8h        ‚îÇ 1           ‚îÇ
‚îÇ Produtiv.   ‚îÇ Absente√≠smo ‚îÇ M√©dia Di√°ria‚îÇ Faltas Just.‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ R$ 1.009,09               ‚îÇ R$ 825,80                 ‚îÇ
‚îÇ Custo M√£o de Obra         ‚îÇ Outros Custos             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

---

## üöÄ IMPLEMENTA√á√ÉO

### **Passos para Corre√ß√£o:**

1. **Atualizar fun√ß√£o de c√°lculo** com separa√ß√£o de faltas
2. **Corrigir template HTML** removendo duplicata
3. **Implementar novo KPI** "Faltas Justificadas"
4. **Testar com dados do Jo√£o** para validar
5. **Aplicar para todos** os funcion√°rios

### **Arquivos a Modificar:**

- `kpis_engine_v3.py` ‚Üí `kpis_engine_v4.py`
- `funcionario_perfil.html` (template)
- `main.py` (rota do perfil)

Esta corre√ß√£o resolve **todos** os problemas identificados mantendo a l√≥gica existente!

