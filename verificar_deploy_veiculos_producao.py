#!/usr/bin/env python3
"""
üîç VERIFICA√á√ÉO DEPLOY VE√çCULOS - PRODU√á√ÉO
========================================
Script para diagnosticar e verificar o deploy de ve√≠culos em produ√ß√£o
"""

import os
import sys
import json
from datetime import datetime

def verificar_deploy():
    """Verificar status do deploy de ve√≠culos"""
    print("üîç VERIFICANDO DEPLOY DE VE√çCULOS EM PRODU√á√ÉO")
    print("=" * 50)
    
    # Verificar se arquivo de resultado existe
    result_file = '/tmp/veiculos_v2_deploy_result.json'
    if os.path.exists(result_file):
        print(f"‚úÖ Arquivo de resultado encontrado: {result_file}")
        try:
            with open(result_file, 'r') as f:
                result = json.load(f)
            print(f"üìä Status do √∫ltimo deploy: {result['status']}")
            print(f"üìÖ Timestamp: {result['timestamp']}")
            print(f"‚úÖ Fases completas: {result['success_count']}/{result['total_phases']}")
            
            if result['errors']:
                print(f"‚ùå Erros: {len(result['errors'])}")
                for error in result['errors']:
                    print(f"   - {error}")
            
            if result['warnings']:
                print(f"‚ö†Ô∏è Warnings: {len(result['warnings'])}")
                for warning in result['warnings']:
                    print(f"   - {warning}")
                    
        except Exception as e:
            print(f"‚ùå Erro ao ler resultado: {e}")
    else:
        print("‚ö†Ô∏è Arquivo de resultado n√£o encontrado")
    
    # Verificar logs de deploy
    log_file = '/tmp/veiculos_v2_deploy.log'
    if os.path.exists(log_file):
        print(f"‚úÖ Log de deploy encontrado: {log_file}")
        print("üìã √öltimas 10 linhas do log:")
        try:
            with open(log_file, 'r') as f:
                lines = f.readlines()
            for line in lines[-10:]:
                print(f"   {line.strip()}")
        except Exception as e:
            print(f"‚ùå Erro ao ler log: {e}")
    else:
        print("‚ö†Ô∏è Log de deploy n√£o encontrado")

if __name__ == "__main__":
    verificar_deploy()