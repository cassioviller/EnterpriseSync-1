#!/bin/bash
set -e

echo "üöÄ SIGE v8.0 - Inicializa√ß√£o de Produ√ß√£o"
echo "========================================"

# Aguardar PostgreSQL estar dispon√≠vel
echo "‚è≥ Aguardando PostgreSQL..."
until pg_isready -h "${POSTGRES_HOST:-localhost}" -p "${POSTGRES_PORT:-5432}" -U "${POSTGRES_USER:-postgres}"; do
  echo "PostgreSQL ainda n√£o est√° pronto - aguardando..."
  sleep 2
done
echo "‚úÖ PostgreSQL dispon√≠vel!"

# Aplicar corre√ß√µes cr√≠ticas de produ√ß√£o
echo "üîß Aplicando corre√ß√µes de produ√ß√£o..."
python3 deploy_fix_producao.py

if [ $? -eq 0 ]; then
    echo "‚úÖ Corre√ß√µes aplicadas com sucesso!"
else
    echo "‚ùå Falha nas corre√ß√µes de produ√ß√£o!"
    exit 1
fi

# Executar migra√ß√µes autom√°ticas do sistema
echo "üîÑ Executando migra√ß√µes do sistema..."
python3 -c "
import sys
sys.path.append('.')
from app import app, db
with app.app_context():
    db.create_all()
    print('‚úÖ Migra√ß√µes do sistema conclu√≠das!')
"

# Verificar integridade do sistema
echo "üîç Verificando integridade do sistema..."
python3 -c "
import sys
sys.path.append('.')
from app import app, db
from models import Obra, Usuario
with app.app_context():
    try:
        # Testar queries cr√≠ticas
        obras_count = Obra.query.count()
        users_count = Usuario.query.count()
        print(f'‚úÖ Sistema √≠ntegro: {obras_count} obras, {users_count} usu√°rios')
    except Exception as e:
        print(f'‚ùå Erro de integridade: {e}')
        exit(1)
"

if [ $? -eq 0 ]; then
    echo "‚úÖ Sistema √≠ntegro e pronto!"
else
    echo "‚ùå Falha na verifica√ß√£o de integridade!"
    exit 1
fi

echo "========================================"
echo "üéâ SIGE v8.0 - Pronto para Produ√ß√£o"
echo "========================================"

# Iniciar aplica√ß√£o
echo "üöÄ Iniciando aplica√ß√£o..."
exec gunicorn --bind 0.0.0.0:${PORT:-5000} --workers ${WORKERS:-2} --timeout ${TIMEOUT:-120} --reuse-port main:app