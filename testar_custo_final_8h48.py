#!/usr/bin/env python3
"""
TESTE FINAL - C√ÅLCULO 8H48MIN
Testa se a engine est√° calculando corretamente com a jornada real
"""

import os
import sys
sys.path.append('.')

from app import app, db
from models import Funcionario
from kpis_engine import KPIsEngine
from datetime import date

def testar_calculo_final():
    """Teste final do c√°lculo com jornada 8h48min"""
    
    with app.app_context():
        print("TESTE FINAL - JORNADA 8H48MIN")
        print("=" * 50)
        
        # Buscar Danilo
        danilo = Funcionario.query.filter(
            Funcionario.nome.like('%Danilo Jos√©%')
        ).first()
        
        if not danilo:
            print("‚ùå Danilo n√£o encontrado")
            return
        
        print(f"Funcion√°rio: {danilo.nome}")
        print(f"Sal√°rio: R$ {danilo.salario:,.2f}")
        
        # Usar a engine para calcular
        engine = KPIsEngine()
        kpis = engine.calcular_kpis_funcionario(
            danilo.id,
            date(2025, 7, 1),
            date(2025, 7, 31)
        )
        
        horas_trabalhadas = kpis.get('horas_trabalhadas', 0)
        custo_engine = kpis.get('custo_mao_obra', 0)
        
        print(f"\nRESULTADO DA ENGINE:")
        print(f"Horas trabalhadas: {horas_trabalhadas}h")
        print(f"Custo calculado: R$ {custo_engine:,.2f}")
        
        # Valida√ß√£o manual com jornada 8h48min
        print(f"\nVALIDA√á√ÉO MANUAL:")
        print(f"Jornada: 7h12 √†s 17h = 9h48min no local")
        print(f"Almo√ßo: 1h")
        print(f"Horas efetivas/dia: 8h48min = 8.8h")
        print(f"Dias √∫teis julho/2025: 23")
        print(f"Horas mensais: 23 √ó 8.8h = 202.4h")
        
        valor_hora_correto = danilo.salario / 202.4
        custo_manual = horas_trabalhadas * valor_hora_correto
        
        print(f"Valor/hora: R$ {danilo.salario:,.2f} √∑ 202.4h = R$ {valor_hora_correto:.2f}")
        print(f"Custo manual: {horas_trabalhadas}h √ó R$ {valor_hora_correto:.2f} = R$ {custo_manual:.2f}")
        
        # Comparar
        diferenca = abs(custo_engine - custo_manual)
        percentual_diferenca = (diferenca / custo_manual) * 100 if custo_manual > 0 else 0
        
        print(f"\nCOMPARA√á√ÉO:")
        print(f"Engine: R$ {custo_engine:.2f}")
        print(f"Manual: R$ {custo_manual:.2f}")
        print(f"Diferen√ßa: R$ {diferenca:.2f} ({percentual_diferenca:.1f}%)")
        
        if diferenca < 10.0:  # Toler√¢ncia de R$ 10
            print("‚úÖ C√ÅLCULO CORRETO!")
            return True
        else:
            print("‚ùå Ainda h√° diferen√ßa significativa")
            return False

def explicar_calculo():
    """Explica o c√°lculo detalhadamente"""
    
    print("\nEXPLICA√á√ÉO DO C√ÅLCULO")
    print("=" * 40)
    
    print("üìã JORNADA DE TRABALHO:")
    print("   ‚Ä¢ Entrada: 7h12")
    print("   ‚Ä¢ Sa√≠da: 17h")
    print("   ‚Ä¢ Tempo no local: 9h48min")
    print("   ‚Ä¢ Almo√ßo: 1h")
    print("   ‚Ä¢ Horas efetivas: 8h48min = 8.8h")
    
    print("\nüìÖ JULHO 2025:")
    print("   ‚Ä¢ Total de dias: 31")
    print("   ‚Ä¢ Dias √∫teis (seg-sex): 23")
    print("   ‚Ä¢ Fins de semana: 8 dias")
    print("   ‚Ä¢ Feriados: 0")
    
    print("\nüí∞ C√ÅLCULO FINANCEIRO:")
    print("   ‚Ä¢ Sal√°rio: R$ 2.800,00")
    print("   ‚Ä¢ Horas mensais: 23 √ó 8.8h = 202.4h")
    print("   ‚Ä¢ Valor/hora: R$ 2.800 √∑ 202.4h = R$ 13.83")
    
    print("\n‚è∞ PARA 184H TRABALHADAS:")
    print("   ‚Ä¢ Custo: 184h √ó R$ 13.83 = R$ 2.544,72")
    print("   ‚Ä¢ An√°lise: 184h √∑ 202.4h = 90.9% das horas esperadas")

if __name__ == "__main__":
    print("VALIDA√á√ÉO FINAL DO C√ÅLCULO")
    print("=" * 60)
    
    # Teste principal
    sucesso = testar_calculo_final()
    
    # Explica√ß√£o detalhada
    explicar_calculo()
    
    print("\n" + "=" * 60)
    if sucesso:
        print("‚úÖ IMPLEMENTA√á√ÉO CONCLU√çDA COM SUCESSO!")
        print("‚úÖ C√°lculo baseado na jornada real de trabalho")
        print("‚úÖ Considera dias √∫teis espec√≠ficos de cada m√™s")
        print("‚úÖ Valor/hora din√¢mico e preciso")
    else:
        print("‚ö†Ô∏è  Implementa√ß√£o em progresso")
        print("‚ö†Ô∏è  Engine precisa de ajustes finais")