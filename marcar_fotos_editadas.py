#!/usr/bin/env python3
"""
Script para marcar fotos existentes como editadas pelo usu√°rio
Execute este script UMA VEZ para proteger fotos j√° existentes
"""

from app import app
from models import db, Funcionario

def marcar_fotos_existentes():
    """Marca todas as fotos n√£o-SVG existentes como editadas pelo usu√°rio"""
    
    with app.app_context():
        print("üîí PROTEGENDO FOTOS EXISTENTES")
        print("=" * 50)
        
        # Buscar funcion√°rios com fotos que N√ÉO s√£o SVG (fotos reais carregadas pelo usu√°rio)
        funcionarios_com_foto = Funcionario.query.filter(
            db.and_(
                Funcionario.foto.isnot(None),
                Funcionario.foto != '',
                ~Funcionario.foto.like('fotos_funcionarios/%')  # N√£o s√£o avatares SVG
            )
        ).all()
        
        print(f"Encontrados {len(funcionarios_com_foto)} funcion√°rios com fotos reais")
        
        fotos_protegidas = 0
        
        for funcionario in funcionarios_com_foto:
            # Marcar como editada pelo usu√°rio (para n√£o ser sobrescrita)
            funcionario.foto_editada_usuario = True
            fotos_protegidas += 1
            print(f"  ‚úÖ {funcionario.nome} -> Foto protegida: {funcionario.foto}")
        
        # Salvar mudan√ßas
        db.session.commit()
        
        print(f"\nüéØ RESULTADO:")
        print(f"   ‚úÖ {fotos_protegidas} fotos marcadas como editadas pelo usu√°rio")
        print(f"   ‚úÖ Essas fotos nunca ser√£o sobrescritas pelo sistema autom√°tico")
        print(f"   ‚úÖ Apenas funcion√°rios SEM foto receber√£o avatares autom√°ticos")

if __name__ == "__main__":
    marcar_fotos_existentes()