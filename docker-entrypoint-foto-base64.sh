#!/bin/bash
# Docker entrypoint com migra√ß√£o autom√°tica da coluna foto_base64
# Seguindo o padr√£o estabelecido para admin_id e kpi_associado

echo "===========================================" 
echo "DOCKER ENTRYPOINT: SIGE v8.0 - FOTOS BASE64"
echo "==========================================="
echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S')"

# Verificar se estamos em produ√ß√£o
if [[ -n "$DATABASE_URL" && "$DATABASE_URL" == postgres* ]]; then
    echo "üåç Ambiente: PRODU√á√ÉO"
    echo "üìä Database: PostgreSQL"
else
    echo "üåç Ambiente: DESENVOLVIMENTO" 
    echo "üìä Database: Local"
fi

# Aguardar banco de dados estar dispon√≠vel
echo ""
echo "‚è≥ Aguardando banco de dados..."
while ! pg_isready -h ${PGHOST:-localhost} -p ${PGPORT:-5432} -U ${PGUSER:-postgres} -d ${PGDATABASE:-sige} 2>/dev/null; do
    echo "   Aguardando PostgreSQL..."
    sleep 2
done
echo "‚úÖ Banco de dados dispon√≠vel!"

# Executar migra√ß√£o da coluna foto_base64
echo ""
echo "üîß Executando migra√ß√£o da coluna foto_base64..."
python3 migrations/add_foto_base64_to_funcionario.py

if [ $? -eq 0 ]; then
    echo "‚úÖ Migra√ß√£o foto_base64 conclu√≠da com sucesso!"
else
    echo "‚ö†Ô∏è Aviso na migra√ß√£o foto_base64 (pode j√° existir)"
fi

# Validar integridade do banco
echo ""
echo "üîç Validando integridade do banco..."
python3 -c "
from app import app, db
from models import Funcionario
from sqlalchemy import text

with app.app_context():
    try:
        # Verificar coluna foto_base64
        result = db.session.execute(text('''
            SELECT column_name FROM information_schema.columns 
            WHERE table_name = \'funcionario\' AND column_name = \'foto_base64\'
        ''')).fetchone()
        
        if result:
            print('‚úÖ Coluna foto_base64 validada')
        else:
            print('‚ùå Coluna foto_base64 n√£o encontrada')
            
        # Contar funcion√°rios com fotos base64
        count = Funcionario.query.filter(Funcionario.foto_base64.isnot(None)).count()
        print(f'üìä Funcion√°rios com foto_base64: {count}')
        
    except Exception as e:
        print(f'‚ö†Ô∏è Erro na valida√ß√£o: {e}')
"

# Iniciar aplica√ß√£o
echo ""
echo "üöÄ Iniciando aplica√ß√£o SIGE..."
echo "==========================================="

exec "$@"