#!/usr/bin/env python3
"""
Debug do formul√°rio RDO - verificar campos e estrutura
"""

def analisar_template_novo_html():
    """Analisar o template novo.html para identificar campos do formul√°rio"""
    print("üîç AN√ÅLISE DO TEMPLATE novo.html")
    print("=" * 50)
    
    try:
        with open('templates/rdo/novo.html', 'r', encoding='utf-8') as f:
            conteudo = f.read()
        
        # Procurar por campos de input relacionados a subatividades
        import re
        
        # Buscar campos de nome de subatividade
        nomes_subatividade = re.findall(r'name=["\']nome_subatividade_\d+["\']', conteudo)
        print(f"üìù Campos nome_subatividade encontrados: {len(nomes_subatividade)}")
        for campo in nomes_subatividade[:5]:  # Mostrar primeiros 5
            print(f"   {campo}")
        
        # Buscar campos de percentual
        percentuais = re.findall(r'name=["\']percentual_subatividade_\d+["\']', conteudo)
        print(f"üìä Campos percentual_subatividade encontrados: {len(percentuais)}")
        for campo in percentuais[:5]:
            print(f"   {campo}")
        
        # Buscar campos subatividade_ (sistema padr√£o)
        sistema_padrao = re.findall(r'name=["\']subatividade_\d+_percentual["\']', conteudo)
        print(f"‚öôÔ∏è Campos subatividade_X_percentual encontrados: {len(sistema_padrao)}")
        for campo in sistema_padrao[:5]:
            print(f"   {campo}")
        
        # Verificar se h√° bot√£o "Testar √öltimo RDO"
        if 'Testar √öltimo RDO' in conteudo:
            print("‚úÖ Bot√£o 'Testar √öltimo RDO' presente")
        else:
            print("‚ùå Bot√£o 'Testar √öltimo RDO' N√ÉO encontrado")
        
        # Verificar se h√° JavaScript relacionado
        if 'api/test/rdo/ultimo-rdo-dados' in conteudo:
            print("‚úÖ JavaScript para carregar √∫ltimo RDO presente")
        else:
            print("‚ùå JavaScript para carregar √∫ltimo RDO N√ÉO encontrado")
        
        return True
        
    except FileNotFoundError:
        print("‚ùå Arquivo templates/rdo/novo.html n√£o encontrado")
        return False
    except Exception as e:
        print(f"‚ùå Erro ao analisar template: {e}")
        return False

def identificar_formato_campos():
    """Identificar qual formato de campos est√° sendo usado"""
    print("\nüéØ IDENTIFICA√á√ÉO DO FORMATO DOS CAMPOS")
    print("=" * 50)
    
    print("üí≠ FORMATOS POSS√çVEIS:")
    print("1. Campo manual: name='nome_subatividade_1', name='percentual_subatividade_1'")
    print("2. Sistema padr√£o: name='subatividade_123_percentual'")  
    print("3. H√≠brido: ambos os formatos")
    print("4. Outro formato n√£o identificado")
    
    print("\nüîß CORRE√á√ÉO APLICADA NO views.py:")
    print("- ‚úÖ Suporte para campos manuais (nome_subatividade_X)")
    print("- ‚úÖ Suporte para sistema padr√£o (subatividade_X_percentual)")
    print("- ‚úÖ Logs detalhados para debugging")
    
    print("\n‚ùì PR√ìXIMA VERIFICA√á√ÉO:")
    print("- Testar se o template usa o formato correto")
    print("- Verificar se JavaScript preenche campos corretos")
    print("- Confirmar se dados chegam no backend")

def simular_request_form():
    """Simular dados do request.form que deveriam chegar do frontend"""
    print("\nüìù SIMULA√á√ÉO DOS DADOS DO FORMUL√ÅRIO")
    print("=" * 50)
    
    print("üéØ DADOS QUE O USU√ÅRIO PREENCHEU:")
    print("   Montagem de Pilares: 100%")
    print("   Instala√ß√£o de Vigas: 100%")  
    print("   Soldagem de bases: 100%")
    
    print("\nüìã FORMATO ESPERADO NO request.form:")
    formatos = [
        "# Formato Manual:",
        "nome_subatividade_1 = 'Montagem de Pilares'",
        "percentual_subatividade_1 = '100'",
        "observacoes_subatividade_1 = ''",
        "",
        "# Formato Sistema:",
        "subatividade_58_percentual = '100'",  # ID da subatividade
        "subatividade_58_observacoes = ''",
        "",
        "# Outros campos:",
        "obra_id = '40'",
        "data_relatorio = '2025-08-30'"
    ]
    
    for linha in formatos:
        print(f"   {linha}")
    
    print("\nüîç VERIFICA√á√ÉO NECESS√ÅRIA:")
    print("1. Adicionar logs para mostrar TODOS os campos do request.form")
    print("2. Confirmar se dados chegam com formato esperado")
    print("3. Testar salvamento com dados simulados")

def main():
    print("üîç DEBUG COMPLETO DO FORMUL√ÅRIO RDO")
    print("=" * 55)
    
    # Analisar template
    template_ok = analisar_template_novo_html()
    
    # Identificar formatos
    identificar_formato_campos()
    
    # Simular dados
    simular_request_form()
    
    print("\nüìä RESUMO DO DIAGN√ìSTICO:")
    if template_ok:
        print("‚úÖ Template novo.html existe e foi analisado")
        print("‚úÖ Corre√ß√£o no views.py aplicada")
        print("‚è≥ Pr√≥ximo passo: testar salvamento real")
    else:
        print("‚ùå Problema no template - template n√£o encontrado")
    
    print("\nüéØ A√á√ÉO IMEDIATA:")
    print("Testar cria√ß√£o de RDO e verificar logs detalhados no console")

if __name__ == "__main__":
    main()