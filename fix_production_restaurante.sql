-- Script SQL para Corre√ß√£o do Schema da Tabela Restaurante em Produ√ß√£o
-- Baseado no diagn√≥stico: colunas faltantes identificadas

-- Verificar schema atual
\echo 'üîç Schema atual da tabela restaurante:'
\d restaurante

-- Adicionar colunas faltantes identificadas pelo diagn√≥stico
\echo 'üîß Adicionando colunas faltantes...'

-- Coluna responsavel (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'responsavel'
    ) THEN
        ALTER TABLE restaurante ADD COLUMN responsavel VARCHAR(100);
        RAISE NOTICE '‚úÖ Coluna responsavel adicionada';
    ELSE
        RAISE NOTICE '‚úÖ Coluna responsavel j√° existe';
    END IF;
END $$;

-- Coluna preco_almoco (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'preco_almoco'
    ) THEN
        ALTER TABLE restaurante ADD COLUMN preco_almoco DECIMAL(10,2) DEFAULT 0.00;
        RAISE NOTICE '‚úÖ Coluna preco_almoco adicionada';
    ELSE
        RAISE NOTICE '‚úÖ Coluna preco_almoco j√° existe';
    END IF;
END $$;

-- Coluna preco_jantar (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'preco_jantar'
    ) THEN
        ALTER TABLE restaurante ADD COLUMN preco_jantar DECIMAL(10,2) DEFAULT 0.00;
        RAISE NOTICE '‚úÖ Coluna preco_jantar adicionada';
    ELSE
        RAISE NOTICE '‚úÖ Coluna preco_jantar j√° existe';
    END IF;
END $$;

-- Coluna preco_lanche (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'preco_lanche'
    ) THEN
        ALTER TABLE restaurante ADD COLUMN preco_lanche DECIMAL(10,2) DEFAULT 0.00;
        RAISE NOTICE '‚úÖ Coluna preco_lanche adicionada';
    ELSE
        RAISE NOTICE '‚úÖ Coluna preco_lanche j√° existe';
    END IF;
END $$;

-- Coluna admin_id (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'admin_id'
    ) THEN
        ALTER TABLE restaurante ADD COLUMN admin_id INTEGER;
        RAISE NOTICE '‚úÖ Coluna admin_id adicionada';
    ELSE
        RAISE NOTICE '‚úÖ Coluna admin_id j√° existe';
    END IF;
END $$;

-- Remover coluna duplicada se existir
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'restaurante' AND column_name = 'contato_responsavel'
    ) THEN
        ALTER TABLE restaurante DROP COLUMN contato_responsavel;
        RAISE NOTICE 'üóëÔ∏è Coluna duplicada contato_responsavel removida';
    ELSE
        RAISE NOTICE '‚úÖ Coluna contato_responsavel n√£o existe (correto)';
    END IF;
END $$;

-- Configurar admin_id para restaurantes existentes
\echo 'üîß Configurando admin_id para restaurantes existentes...'
UPDATE restaurante 
SET admin_id = 1 
WHERE admin_id IS NULL OR admin_id = 0;

\echo '‚úÖ Schema corrigido! Verificando resultado final:'

-- Mostrar schema final
\d restaurante

-- Contar restaurantes
SELECT COUNT(*) as total_restaurantes FROM restaurante;

\echo 'üéâ CORRE√á√ÉO CONCLU√çDA! Acesse /restaurantes para verificar.'