#!/usr/bin/env python3
"""
SCRIPT DE DEPLOY HOTFIX - CORRE√á√ÉO PERFIL FUNCION√ÅRIO
Aplica as corre√ß√µes necess√°rias para resolver o erro interno do servidor
"""

import os
import sys
from datetime import datetime

def main():
    print("üöÄ INICIANDO DEPLOY HOTFIX - CORRE√á√ÉO PERFIL FUNCION√ÅRIO")
    print("=" * 60)
    
    # Verificar se estamos na produ√ß√£o
    is_production = 'sige.cassioviller.tech' in os.environ.get('REPLIT_DOMAINS', '')
    
    print(f"üìç Ambiente: {'PRODU√á√ÉO' if is_production else 'DESENVOLVIMENTO'}")
    print(f"‚è∞ Timestamp: {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
    
    # Lista de arquivos que precisam ser atualizados
    files_to_update = [
        'views.py',
        'utils.py'
    ]
    
    print("\nüìã VERIFICA√á√ÉO DOS ARQUIVOS:")
    for file in files_to_update:
        if os.path.exists(file):
            print(f"‚úÖ {file} - Encontrado")
        else:
            print(f"‚ùå {file} - N√ÉO ENCONTRADO")
            return False
    
    # Verificar se as corre√ß√µes est√£o aplicadas
    print("\nüîç VERIFICANDO CORRE√á√ïES:")
    
    # 1. Verificar views.py
    with open('views.py', 'r') as f:
        views_content = f.read()
        if 'calcular_kpis_funcionario_periodo' in views_content:
            print("‚úÖ views.py - Corre√ß√£o aplicada (calcular_kpis_funcionario_periodo)")
        else:
            print("‚ùå views.py - Corre√ß√£o N√ÉO aplicada")
            return False
    
    # 2. Verificar utils.py
    with open('utils.py', 'r') as f:
        utils_content = f.read()
        if 'atrasos_horas' in utils_content and 'faltas_justificadas' in utils_content:
            print("‚úÖ utils.py - Corre√ß√£o aplicada (campos atrasos_horas e faltas_justificadas)")
        else:
            print("‚ùå utils.py - Corre√ß√£o N√ÉO aplicada")
            return False
    
    print("\nüéØ TESTANDO FUNCIONALIDADE:")
    try:
        from app import app, db
        from models import Funcionario
        from utils import calcular_kpis_funcionario_periodo
        from datetime import date
        
        with app.app_context():
            funcionario = Funcionario.query.first()
            if funcionario:
                kpis = calcular_kpis_funcionario_periodo(funcionario.id, date(2025, 8, 1), date(2025, 8, 8))
                
                # Verificar se todos os campos necess√°rios est√£o presentes
                required_fields = ['atrasos_horas', 'faltas_justificadas', 'outros_custos', 'horas_trabalhadas']
                missing_fields = []
                
                for field in required_fields:
                    if field not in kpis:
                        missing_fields.append(field)
                
                if not missing_fields:
                    print("‚úÖ KPIs - Todos os campos necess√°rios est√£o presentes")
                    print(f"   - horas_trabalhadas: {kpis['horas_trabalhadas']}")
                    print(f"   - atrasos_horas: {kpis['atrasos_horas']}")
                    print(f"   - faltas_justificadas: {kpis['faltas_justificadas']}")
                    print(f"   - outros_custos: {kpis['outros_custos']}")
                else:
                    print(f"‚ùå KPIs - Campos faltando: {missing_fields}")
                    return False
            else:
                print("‚ùå Nenhum funcion√°rio encontrado para teste")
                return False
                
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        return False
    
    print(f"\nüéâ DEPLOY HOTFIX CONCLU√çDO COM SUCESSO!")
    print(f"‚úÖ Corre√ß√£o do perfil do funcion√°rio aplicada")
    print(f"‚úÖ Campos KPIs corrigidos: atrasos_horas, faltas_justificadas, outros_custos")
    print(f"‚úÖ Template funcionario_perfil.html agora deve funcionar corretamente")
    
    if is_production:
        print(f"\nüåê O ambiente de produ√ß√£o deve atualizar automaticamente")
        print(f"üîÑ Aguarde alguns segundos e teste novamente o acesso ao perfil")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)