#!/bin/bash
# DOCKER ENTRYPOINT PRODUCTION FIX - SIGE v8.0
# Script otimizado para resolver loops infinitos em produ√ß√£o

set -e

echo "üöÄ SIGE v8.0 - Iniciando (Production Fix v2.0 - 01/09/2025)"
echo "üìç Modo: ${FLASK_ENV:-production}"

# Configura√ß√£o silenciosa do ambiente
export PYTHONPATH=/app
export FLASK_APP=main.py
export FLASK_ENV=production

# Aguardar PostgreSQL com timeout reduzido
echo "‚è≥ Verificando PostgreSQL..."

# Configura√ß√£o padr√£o EasyPanel
DB_HOST="${DATABASE_HOST:-viajey_sige}"
DB_PORT="${DATABASE_PORT:-5432}"
DB_USER="${DATABASE_USER:-sige}"

TIMEOUT=20
COUNTER=0

until pg_isready -h "${DB_HOST}" -p "${DB_PORT}" -U "${DB_USER}" >/dev/null 2>&1; do
    if [[ ${COUNTER} -eq ${TIMEOUT} ]]; then
        echo "‚ùå Timeout PostgreSQL (${TIMEOUT}s)"
        exit 1
    fi
    sleep 1
    COUNTER=$((COUNTER + 1))
done

echo "‚úÖ PostgreSQL conectado!"

# HOTFIX CR√çTICO: Corrigir admin_id na tabela servico ANTES da aplica√ß√£o iniciar
echo "üö® HOTFIX PRODU√á√ÉO: Aplicando corre√ß√£o admin_id na tabela servico..."

# Primeira tentativa: DATABASE_URL direto
if [ -n "$DATABASE_URL" ]; then
    echo "üìç DATABASE_URL detectado: $(echo $DATABASE_URL | sed 's/:[^:]*@/:****@/')"
    echo "üîß EXECUTANDO HOTFIX DIRETO NO POSTGRESQL..."
    
    # Executar SQL cr√≠tico via psql
    psql "$DATABASE_URL" << 'EOSQL'
-- HOTFIX CR√çTICO: Adicionar admin_id na tabela servico
-- Este script executa automaticamente no deploy

\echo 'üîç Verificando estrutura da tabela servico...'

-- Verificar se coluna admin_id j√° existe
DO $$
DECLARE
    column_exists boolean := false;
    user_exists boolean := false;
BEGIN
    -- Verificar se coluna existe
    SELECT EXISTS (
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = 'servico' AND column_name = 'admin_id'
    ) INTO column_exists;
    
    IF NOT column_exists THEN
        RAISE NOTICE 'üö® COLUNA admin_id NAO EXISTE - APLICANDO HOTFIX...';
        
        -- 1. Adicionar coluna admin_id
        RAISE NOTICE '1Ô∏è‚É£ Adicionando coluna admin_id...';
        ALTER TABLE servico ADD COLUMN admin_id INTEGER;
        
        -- 2. Verificar/criar usu√°rio admin padr√£o
        SELECT EXISTS (SELECT id FROM usuario WHERE id = 10) INTO user_exists;
        IF NOT user_exists THEN
            RAISE NOTICE '2Ô∏è‚É£ Criando usu√°rio admin padr√£o...';
            INSERT INTO usuario (id, username, email, nome, password_hash, tipo_usuario, ativo) 
            VALUES (10, 'admin_producao', 'admin@producao.com', 'Admin Produ√ß√£o', 
                    'scrypt:32768:8:1$password_hash', 'admin', TRUE);
        ELSE
            RAISE NOTICE '2Ô∏è‚É£ Usu√°rio admin_id=10 j√° existe';
        END IF;
        
        -- 3. Popular todos os servi√ßos existentes
        RAISE NOTICE '3Ô∏è‚É£ Populando servi√ßos existentes...';
        UPDATE servico SET admin_id = 10 WHERE admin_id IS NULL;
        
        -- 4. Adicionar constraint foreign key
        RAISE NOTICE '4Ô∏è‚É£ Adicionando foreign key constraint...';
        ALTER TABLE servico ADD CONSTRAINT fk_servico_admin 
        FOREIGN KEY (admin_id) REFERENCES usuario(id);
        
        -- 5. Tornar coluna NOT NULL
        RAISE NOTICE '5Ô∏è‚É£ Definindo coluna como NOT NULL...';
        ALTER TABLE servico ALTER COLUMN admin_id SET NOT NULL;
        
        RAISE NOTICE '‚úÖ HOTFIX COMPLETADO COM SUCESSO!';
        RAISE NOTICE 'üìä Estrutura da tabela servico atualizada';
        
    ELSE
        RAISE NOTICE '‚úÖ Coluna admin_id j√° existe - nenhuma a√ß√£o necess√°ria';
    END IF;
END
$$;

\echo 'üéØ HOTFIX conclu√≠do!'
EOSQL
    
    
    HOTFIX_RESULT=$?
    
    if [ $HOTFIX_RESULT -eq 0 ]; then
        echo "‚úÖ HOTFIX EXECUTADO COM SUCESSO!"
        echo "üìä Tabela servico atualizada com admin_id"
    else
        echo "‚ö†Ô∏è HOTFIX falhou - tentando m√©todo alternativo..."
        
        # FALLBACK: M√©todo alternativo sem heredoc
        echo "üîß Executando corre√ß√£o simplificada..."
        psql "$DATABASE_URL" -c "ALTER TABLE servico ADD COLUMN IF NOT EXISTS admin_id INTEGER;" && \
        psql "$DATABASE_URL" -c "UPDATE servico SET admin_id = 10 WHERE admin_id IS NULL;" && \
        echo "‚úÖ HOTFIX SIMPLIFICADO APLICADO!" || echo "‚ùå TODAS AS TENTATIVAS FALHARAM"
    fi
else
    echo "‚ùå DATABASE_URL n√£o encontrado - pulando HOTFIX"
fi

# Inicializa√ß√£o m√≠nima da aplica√ß√£o (sem loops)
echo "üîß Inicializando aplica√ß√£o..."
python -c "
import os
import sys
import warnings

# Suprimir warnings para evitar logs excessivos
warnings.filterwarnings('ignore')
os.environ['WERKZEUG_RUN_MAIN'] = 'true'

sys.path.append('/app')

try:
    from app import app
    print('‚úÖ App carregado')
except Exception as e:
    print(f'‚ùå Erro: {e}')
    sys.exit(1)
" 2>/dev/null

if [[ $? -ne 0 ]]; then
    echo "‚ùå Falha na inicializa√ß√£o"
    exit 1
fi

echo "üéØ Aplica√ß√£o pronta!"

# Executar comando com configura√ß√µes otimizadas
exec "$@"